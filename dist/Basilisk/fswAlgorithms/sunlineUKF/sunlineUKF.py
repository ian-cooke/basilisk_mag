# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.12
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (2, 7, 0):
    def swig_import_helper():
        import importlib
        pkg = __name__.rpartition('.')[0]
        mname = '.'.join((pkg, '_sunlineUKF')).lstrip('.')
        try:
            return importlib.import_module(mname)
        except ImportError:
            return importlib.import_module('_sunlineUKF')
    _sunlineUKF = swig_import_helper()
    del swig_import_helper
elif _swig_python_version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_sunlineUKF', [dirname(__file__)])
        except ImportError:
            import _sunlineUKF
            return _sunlineUKF
        try:
            _mod = imp.load_module('_sunlineUKF', fp, pathname, description)
        finally:
            if fp is not None:
                fp.close()
        return _mod
    _sunlineUKF = swig_import_helper()
    del swig_import_helper
else:
    import _sunlineUKF
del _swig_python_version_info

try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        if _newclass:
            object.__setattr__(self, name, value)
        else:
            self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except __builtin__.Exception:
    class _object:
        pass
    _newclass = 0


def new_doubleArray(nelements):
    return _sunlineUKF.new_doubleArray(nelements)
new_doubleArray = _sunlineUKF.new_doubleArray

def delete_doubleArray(ary):
    return _sunlineUKF.delete_doubleArray(ary)
delete_doubleArray = _sunlineUKF.delete_doubleArray

def doubleArray_getitem(ary, index):
    return _sunlineUKF.doubleArray_getitem(ary, index)
doubleArray_getitem = _sunlineUKF.doubleArray_getitem

def doubleArray_setitem(ary, index, value):
    return _sunlineUKF.doubleArray_setitem(ary, index, value)
doubleArray_setitem = _sunlineUKF.doubleArray_setitem

def new_longArray(nelements):
    return _sunlineUKF.new_longArray(nelements)
new_longArray = _sunlineUKF.new_longArray

def delete_longArray(ary):
    return _sunlineUKF.delete_longArray(ary)
delete_longArray = _sunlineUKF.delete_longArray

def longArray_getitem(ary, index):
    return _sunlineUKF.longArray_getitem(ary, index)
longArray_getitem = _sunlineUKF.longArray_getitem

def longArray_setitem(ary, index, value):
    return _sunlineUKF.longArray_setitem(ary, index, value)
longArray_setitem = _sunlineUKF.longArray_setitem

def new_intArray(nelements):
    return _sunlineUKF.new_intArray(nelements)
new_intArray = _sunlineUKF.new_intArray

def delete_intArray(ary):
    return _sunlineUKF.delete_intArray(ary)
delete_intArray = _sunlineUKF.delete_intArray

def intArray_getitem(ary, index):
    return _sunlineUKF.intArray_getitem(ary, index)
intArray_getitem = _sunlineUKF.intArray_getitem

def intArray_setitem(ary, index, value):
    return _sunlineUKF.intArray_setitem(ary, index, value)
intArray_setitem = _sunlineUKF.intArray_setitem

def new_shortArray(nelements):
    return _sunlineUKF.new_shortArray(nelements)
new_shortArray = _sunlineUKF.new_shortArray

def delete_shortArray(ary):
    return _sunlineUKF.delete_shortArray(ary)
delete_shortArray = _sunlineUKF.delete_shortArray

def shortArray_getitem(ary, index):
    return _sunlineUKF.shortArray_getitem(ary, index)
shortArray_getitem = _sunlineUKF.shortArray_getitem

def shortArray_setitem(ary, index, value):
    return _sunlineUKF.shortArray_setitem(ary, index, value)
shortArray_setitem = _sunlineUKF.shortArray_setitem


def getStructSize(self):
    try:
        return eval('sizeof_' + repr(self).split(';')[0].split('.')[-1])
    except (NameError) as e:
        typeString = 'sizeof_' + repr(self).split(';')[0].split('.')[-1]
        raise NameError(e.message + '\nYou tried to get this size macro: ' + typeString + 
            '\n It appears to be undefined.  \nYou need to run the SWIG GEN_SIZEOF' +  
            ' SWIG macro against the class/struct in your SWIG file if you want to ' + 
            ' make this call.\n')


def protectSetAttr(self, name, value):
    if(hasattr(self, name) or name == 'this'):
        object.__setattr__(self, name, value)
    else:
        raise ValueError('You tried to add this variable: ' + name + '\n' + 
            'To this class: ' + str(self))

def protectAllClasses(moduleType):
    import inspect
    clsmembers = inspect.getmembers(sys.modules[__name__], inspect.isclass)
    for member in clsmembers:
        try:
            exec(str(member[0]) + '.__setattr__ = protectSetAttr')
            exec(str(member[0]) + '.getStructSize = getStructSize') 
        except (AttributeError, TypeError) as e:
            pass


Update_sunlineUKF = _sunlineUKF.Update_sunlineUKF
SelfInit_sunlineUKF = _sunlineUKF.SelfInit_sunlineUKF
CrossInit_sunlineUKF = _sunlineUKF.CrossInit_sunlineUKF
Reset_sunlineUKF = _sunlineUKF.Reset_sunlineUKF
sizeof_SunlineFilterFswMsg = _sunlineUKF.sizeof_SunlineFilterFswMsg
sizeof_CSSConfigFswMsg = _sunlineUKF.sizeof_CSSConfigFswMsg
sizeof_SunlineUKFConfig = _sunlineUKF.sizeof_SunlineUKFConfig
class SunlineUKFConfig(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, SunlineUKFConfig, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, SunlineUKFConfig, name)
    __repr__ = _swig_repr
    __swig_setmethods__["navStateOutMsgName"] = _sunlineUKF.SunlineUKFConfig_navStateOutMsgName_set
    __swig_getmethods__["navStateOutMsgName"] = _sunlineUKF.SunlineUKFConfig_navStateOutMsgName_get
    if _newclass:
        navStateOutMsgName = _swig_property(_sunlineUKF.SunlineUKFConfig_navStateOutMsgName_get, _sunlineUKF.SunlineUKFConfig_navStateOutMsgName_set)
    __swig_setmethods__["filtDataOutMsgName"] = _sunlineUKF.SunlineUKFConfig_filtDataOutMsgName_set
    __swig_getmethods__["filtDataOutMsgName"] = _sunlineUKF.SunlineUKFConfig_filtDataOutMsgName_get
    if _newclass:
        filtDataOutMsgName = _swig_property(_sunlineUKF.SunlineUKFConfig_filtDataOutMsgName_get, _sunlineUKF.SunlineUKFConfig_filtDataOutMsgName_set)
    __swig_setmethods__["cssDataInMsgName"] = _sunlineUKF.SunlineUKFConfig_cssDataInMsgName_set
    __swig_getmethods__["cssDataInMsgName"] = _sunlineUKF.SunlineUKFConfig_cssDataInMsgName_get
    if _newclass:
        cssDataInMsgName = _swig_property(_sunlineUKF.SunlineUKFConfig_cssDataInMsgName_get, _sunlineUKF.SunlineUKFConfig_cssDataInMsgName_set)
    __swig_setmethods__["cssConfigInMsgName"] = _sunlineUKF.SunlineUKFConfig_cssConfigInMsgName_set
    __swig_getmethods__["cssConfigInMsgName"] = _sunlineUKF.SunlineUKFConfig_cssConfigInMsgName_get
    if _newclass:
        cssConfigInMsgName = _swig_property(_sunlineUKF.SunlineUKFConfig_cssConfigInMsgName_get, _sunlineUKF.SunlineUKFConfig_cssConfigInMsgName_set)
    __swig_setmethods__["numStates"] = _sunlineUKF.SunlineUKFConfig_numStates_set
    __swig_getmethods__["numStates"] = _sunlineUKF.SunlineUKFConfig_numStates_get
    if _newclass:
        numStates = _swig_property(_sunlineUKF.SunlineUKFConfig_numStates_get, _sunlineUKF.SunlineUKFConfig_numStates_set)
    __swig_setmethods__["countHalfSPs"] = _sunlineUKF.SunlineUKFConfig_countHalfSPs_set
    __swig_getmethods__["countHalfSPs"] = _sunlineUKF.SunlineUKFConfig_countHalfSPs_get
    if _newclass:
        countHalfSPs = _swig_property(_sunlineUKF.SunlineUKFConfig_countHalfSPs_get, _sunlineUKF.SunlineUKFConfig_countHalfSPs_set)
    __swig_setmethods__["numObs"] = _sunlineUKF.SunlineUKFConfig_numObs_set
    __swig_getmethods__["numObs"] = _sunlineUKF.SunlineUKFConfig_numObs_get
    if _newclass:
        numObs = _swig_property(_sunlineUKF.SunlineUKFConfig_numObs_get, _sunlineUKF.SunlineUKFConfig_numObs_set)
    __swig_setmethods__["beta"] = _sunlineUKF.SunlineUKFConfig_beta_set
    __swig_getmethods__["beta"] = _sunlineUKF.SunlineUKFConfig_beta_get
    if _newclass:
        beta = _swig_property(_sunlineUKF.SunlineUKFConfig_beta_get, _sunlineUKF.SunlineUKFConfig_beta_set)
    __swig_setmethods__["alpha"] = _sunlineUKF.SunlineUKFConfig_alpha_set
    __swig_getmethods__["alpha"] = _sunlineUKF.SunlineUKFConfig_alpha_get
    if _newclass:
        alpha = _swig_property(_sunlineUKF.SunlineUKFConfig_alpha_get, _sunlineUKF.SunlineUKFConfig_alpha_set)
    __swig_setmethods__["kappa"] = _sunlineUKF.SunlineUKFConfig_kappa_set
    __swig_getmethods__["kappa"] = _sunlineUKF.SunlineUKFConfig_kappa_get
    if _newclass:
        kappa = _swig_property(_sunlineUKF.SunlineUKFConfig_kappa_get, _sunlineUKF.SunlineUKFConfig_kappa_set)
    __swig_setmethods__["lambdaVal"] = _sunlineUKF.SunlineUKFConfig_lambdaVal_set
    __swig_getmethods__["lambdaVal"] = _sunlineUKF.SunlineUKFConfig_lambdaVal_get
    if _newclass:
        lambdaVal = _swig_property(_sunlineUKF.SunlineUKFConfig_lambdaVal_get, _sunlineUKF.SunlineUKFConfig_lambdaVal_set)
    __swig_setmethods__["gamma"] = _sunlineUKF.SunlineUKFConfig_gamma_set
    __swig_getmethods__["gamma"] = _sunlineUKF.SunlineUKFConfig_gamma_get
    if _newclass:
        gamma = _swig_property(_sunlineUKF.SunlineUKFConfig_gamma_get, _sunlineUKF.SunlineUKFConfig_gamma_set)
    __swig_setmethods__["qObsVal"] = _sunlineUKF.SunlineUKFConfig_qObsVal_set
    __swig_getmethods__["qObsVal"] = _sunlineUKF.SunlineUKFConfig_qObsVal_get
    if _newclass:
        qObsVal = _swig_property(_sunlineUKF.SunlineUKFConfig_qObsVal_get, _sunlineUKF.SunlineUKFConfig_qObsVal_set)
    __swig_setmethods__["dt"] = _sunlineUKF.SunlineUKFConfig_dt_set
    __swig_getmethods__["dt"] = _sunlineUKF.SunlineUKFConfig_dt_get
    if _newclass:
        dt = _swig_property(_sunlineUKF.SunlineUKFConfig_dt_get, _sunlineUKF.SunlineUKFConfig_dt_set)
    __swig_setmethods__["timeTag"] = _sunlineUKF.SunlineUKFConfig_timeTag_set
    __swig_getmethods__["timeTag"] = _sunlineUKF.SunlineUKFConfig_timeTag_get
    if _newclass:
        timeTag = _swig_property(_sunlineUKF.SunlineUKFConfig_timeTag_get, _sunlineUKF.SunlineUKFConfig_timeTag_set)
    __swig_setmethods__["wM"] = _sunlineUKF.SunlineUKFConfig_wM_set
    __swig_getmethods__["wM"] = _sunlineUKF.SunlineUKFConfig_wM_get
    if _newclass:
        wM = _swig_property(_sunlineUKF.SunlineUKFConfig_wM_get, _sunlineUKF.SunlineUKFConfig_wM_set)
    __swig_setmethods__["wC"] = _sunlineUKF.SunlineUKFConfig_wC_set
    __swig_getmethods__["wC"] = _sunlineUKF.SunlineUKFConfig_wC_get
    if _newclass:
        wC = _swig_property(_sunlineUKF.SunlineUKFConfig_wC_get, _sunlineUKF.SunlineUKFConfig_wC_set)
    __swig_setmethods__["state"] = _sunlineUKF.SunlineUKFConfig_state_set
    __swig_getmethods__["state"] = _sunlineUKF.SunlineUKFConfig_state_get
    if _newclass:
        state = _swig_property(_sunlineUKF.SunlineUKFConfig_state_get, _sunlineUKF.SunlineUKFConfig_state_set)
    __swig_setmethods__["sBar"] = _sunlineUKF.SunlineUKFConfig_sBar_set
    __swig_getmethods__["sBar"] = _sunlineUKF.SunlineUKFConfig_sBar_get
    if _newclass:
        sBar = _swig_property(_sunlineUKF.SunlineUKFConfig_sBar_get, _sunlineUKF.SunlineUKFConfig_sBar_set)
    __swig_setmethods__["covar"] = _sunlineUKF.SunlineUKFConfig_covar_set
    __swig_getmethods__["covar"] = _sunlineUKF.SunlineUKFConfig_covar_get
    if _newclass:
        covar = _swig_property(_sunlineUKF.SunlineUKFConfig_covar_get, _sunlineUKF.SunlineUKFConfig_covar_set)
    __swig_setmethods__["xBar"] = _sunlineUKF.SunlineUKFConfig_xBar_set
    __swig_getmethods__["xBar"] = _sunlineUKF.SunlineUKFConfig_xBar_get
    if _newclass:
        xBar = _swig_property(_sunlineUKF.SunlineUKFConfig_xBar_get, _sunlineUKF.SunlineUKFConfig_xBar_set)
    __swig_setmethods__["obs"] = _sunlineUKF.SunlineUKFConfig_obs_set
    __swig_getmethods__["obs"] = _sunlineUKF.SunlineUKFConfig_obs_get
    if _newclass:
        obs = _swig_property(_sunlineUKF.SunlineUKFConfig_obs_get, _sunlineUKF.SunlineUKFConfig_obs_set)
    __swig_setmethods__["yMeas"] = _sunlineUKF.SunlineUKFConfig_yMeas_set
    __swig_getmethods__["yMeas"] = _sunlineUKF.SunlineUKFConfig_yMeas_get
    if _newclass:
        yMeas = _swig_property(_sunlineUKF.SunlineUKFConfig_yMeas_get, _sunlineUKF.SunlineUKFConfig_yMeas_set)
    __swig_setmethods__["postFits"] = _sunlineUKF.SunlineUKFConfig_postFits_set
    __swig_getmethods__["postFits"] = _sunlineUKF.SunlineUKFConfig_postFits_get
    if _newclass:
        postFits = _swig_property(_sunlineUKF.SunlineUKFConfig_postFits_get, _sunlineUKF.SunlineUKFConfig_postFits_set)
    __swig_setmethods__["SP"] = _sunlineUKF.SunlineUKFConfig_SP_set
    __swig_getmethods__["SP"] = _sunlineUKF.SunlineUKFConfig_SP_get
    if _newclass:
        SP = _swig_property(_sunlineUKF.SunlineUKFConfig_SP_get, _sunlineUKF.SunlineUKFConfig_SP_set)
    __swig_setmethods__["qNoise"] = _sunlineUKF.SunlineUKFConfig_qNoise_set
    __swig_getmethods__["qNoise"] = _sunlineUKF.SunlineUKFConfig_qNoise_get
    if _newclass:
        qNoise = _swig_property(_sunlineUKF.SunlineUKFConfig_qNoise_get, _sunlineUKF.SunlineUKFConfig_qNoise_set)
    __swig_setmethods__["sQnoise"] = _sunlineUKF.SunlineUKFConfig_sQnoise_set
    __swig_getmethods__["sQnoise"] = _sunlineUKF.SunlineUKFConfig_sQnoise_get
    if _newclass:
        sQnoise = _swig_property(_sunlineUKF.SunlineUKFConfig_sQnoise_get, _sunlineUKF.SunlineUKFConfig_sQnoise_set)
    __swig_setmethods__["qObs"] = _sunlineUKF.SunlineUKFConfig_qObs_set
    __swig_getmethods__["qObs"] = _sunlineUKF.SunlineUKFConfig_qObs_get
    if _newclass:
        qObs = _swig_property(_sunlineUKF.SunlineUKFConfig_qObs_get, _sunlineUKF.SunlineUKFConfig_qObs_set)
    __swig_setmethods__["cssNHat_B"] = _sunlineUKF.SunlineUKFConfig_cssNHat_B_set
    __swig_getmethods__["cssNHat_B"] = _sunlineUKF.SunlineUKFConfig_cssNHat_B_get
    if _newclass:
        cssNHat_B = _swig_property(_sunlineUKF.SunlineUKFConfig_cssNHat_B_get, _sunlineUKF.SunlineUKFConfig_cssNHat_B_set)
    __swig_setmethods__["CBias"] = _sunlineUKF.SunlineUKFConfig_CBias_set
    __swig_getmethods__["CBias"] = _sunlineUKF.SunlineUKFConfig_CBias_get
    if _newclass:
        CBias = _swig_property(_sunlineUKF.SunlineUKFConfig_CBias_get, _sunlineUKF.SunlineUKFConfig_CBias_set)
    __swig_setmethods__["numActiveCss"] = _sunlineUKF.SunlineUKFConfig_numActiveCss_set
    __swig_getmethods__["numActiveCss"] = _sunlineUKF.SunlineUKFConfig_numActiveCss_get
    if _newclass:
        numActiveCss = _swig_property(_sunlineUKF.SunlineUKFConfig_numActiveCss_get, _sunlineUKF.SunlineUKFConfig_numActiveCss_set)
    __swig_setmethods__["numCSSTotal"] = _sunlineUKF.SunlineUKFConfig_numCSSTotal_set
    __swig_getmethods__["numCSSTotal"] = _sunlineUKF.SunlineUKFConfig_numCSSTotal_get
    if _newclass:
        numCSSTotal = _swig_property(_sunlineUKF.SunlineUKFConfig_numCSSTotal_get, _sunlineUKF.SunlineUKFConfig_numCSSTotal_set)
    __swig_setmethods__["sensorUseThresh"] = _sunlineUKF.SunlineUKFConfig_sensorUseThresh_set
    __swig_getmethods__["sensorUseThresh"] = _sunlineUKF.SunlineUKFConfig_sensorUseThresh_get
    if _newclass:
        sensorUseThresh = _swig_property(_sunlineUKF.SunlineUKFConfig_sensorUseThresh_get, _sunlineUKF.SunlineUKFConfig_sensorUseThresh_set)
    __swig_setmethods__["outputSunline"] = _sunlineUKF.SunlineUKFConfig_outputSunline_set
    __swig_getmethods__["outputSunline"] = _sunlineUKF.SunlineUKFConfig_outputSunline_get
    if _newclass:
        outputSunline = _swig_property(_sunlineUKF.SunlineUKFConfig_outputSunline_get, _sunlineUKF.SunlineUKFConfig_outputSunline_set)
    __swig_setmethods__["cssSensorInBuffer"] = _sunlineUKF.SunlineUKFConfig_cssSensorInBuffer_set
    __swig_getmethods__["cssSensorInBuffer"] = _sunlineUKF.SunlineUKFConfig_cssSensorInBuffer_get
    if _newclass:
        cssSensorInBuffer = _swig_property(_sunlineUKF.SunlineUKFConfig_cssSensorInBuffer_get, _sunlineUKF.SunlineUKFConfig_cssSensorInBuffer_set)
    __swig_setmethods__["navStateOutMsgId"] = _sunlineUKF.SunlineUKFConfig_navStateOutMsgId_set
    __swig_getmethods__["navStateOutMsgId"] = _sunlineUKF.SunlineUKFConfig_navStateOutMsgId_get
    if _newclass:
        navStateOutMsgId = _swig_property(_sunlineUKF.SunlineUKFConfig_navStateOutMsgId_get, _sunlineUKF.SunlineUKFConfig_navStateOutMsgId_set)
    __swig_setmethods__["filtDataOutMsgId"] = _sunlineUKF.SunlineUKFConfig_filtDataOutMsgId_set
    __swig_getmethods__["filtDataOutMsgId"] = _sunlineUKF.SunlineUKFConfig_filtDataOutMsgId_get
    if _newclass:
        filtDataOutMsgId = _swig_property(_sunlineUKF.SunlineUKFConfig_filtDataOutMsgId_get, _sunlineUKF.SunlineUKFConfig_filtDataOutMsgId_set)
    __swig_setmethods__["cssDataInMsgId"] = _sunlineUKF.SunlineUKFConfig_cssDataInMsgId_set
    __swig_getmethods__["cssDataInMsgId"] = _sunlineUKF.SunlineUKFConfig_cssDataInMsgId_get
    if _newclass:
        cssDataInMsgId = _swig_property(_sunlineUKF.SunlineUKFConfig_cssDataInMsgId_get, _sunlineUKF.SunlineUKFConfig_cssDataInMsgId_set)
    __swig_setmethods__["cssConfigInMsgId"] = _sunlineUKF.SunlineUKFConfig_cssConfigInMsgId_set
    __swig_getmethods__["cssConfigInMsgId"] = _sunlineUKF.SunlineUKFConfig_cssConfigInMsgId_get
    if _newclass:
        cssConfigInMsgId = _swig_property(_sunlineUKF.SunlineUKFConfig_cssConfigInMsgId_get, _sunlineUKF.SunlineUKFConfig_cssConfigInMsgId_set)

    def __init__(self):
        this = _sunlineUKF.new_SunlineUKFConfig()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sunlineUKF.delete_SunlineUKFConfig
    __del__ = lambda self: None
SunlineUKFConfig_swigregister = _sunlineUKF.SunlineUKFConfig_swigregister
SunlineUKFConfig_swigregister(SunlineUKFConfig)


def sunlineUKFTimeUpdate(ConfigData, updateTime):
    return _sunlineUKF.sunlineUKFTimeUpdate(ConfigData, updateTime)
sunlineUKFTimeUpdate = _sunlineUKF.sunlineUKFTimeUpdate

def sunlineUKFMeasUpdate(ConfigData, updateTime):
    return _sunlineUKF.sunlineUKFMeasUpdate(ConfigData, updateTime)
sunlineUKFMeasUpdate = _sunlineUKF.sunlineUKFMeasUpdate

def sunlineStateProp(stateInOut, dt):
    return _sunlineUKF.sunlineStateProp(stateInOut, dt)
sunlineStateProp = _sunlineUKF.sunlineStateProp

def sunlineUKFMeasModel(ConfigData):
    return _sunlineUKF.sunlineUKFMeasModel(ConfigData)
sunlineUKFMeasModel = _sunlineUKF.sunlineUKFMeasModel
UKF_MAX_DIM = _sunlineUKF.UKF_MAX_DIM

def ukfQRDJustR(sourceMat, nRow, nCol, destMat):
    return _sunlineUKF.ukfQRDJustR(sourceMat, nRow, nCol, destMat)
ukfQRDJustR = _sunlineUKF.ukfQRDJustR

def ukfLInv(sourceMat, nRow, nCol, destMat):
    return _sunlineUKF.ukfLInv(sourceMat, nRow, nCol, destMat)
ukfLInv = _sunlineUKF.ukfLInv

def ukfUInv(sourceMat, nRow, nCol, destMat):
    return _sunlineUKF.ukfUInv(sourceMat, nRow, nCol, destMat)
ukfUInv = _sunlineUKF.ukfUInv

def ukfLUD(sourceMat, nRow, nCol, destMat, indx):
    return _sunlineUKF.ukfLUD(sourceMat, nRow, nCol, destMat, indx)
ukfLUD = _sunlineUKF.ukfLUD

def ukfLUBckSlv(sourceMat, nRow, nCol, indx, bmat, destMat):
    return _sunlineUKF.ukfLUBckSlv(sourceMat, nRow, nCol, indx, bmat, destMat)
ukfLUBckSlv = _sunlineUKF.ukfLUBckSlv

def ukfMatInv(sourceMat, nRow, nCol, destMat):
    return _sunlineUKF.ukfMatInv(sourceMat, nRow, nCol, destMat)
ukfMatInv = _sunlineUKF.ukfMatInv

def ukfCholDecomp(sourceMat, nRow, nCol, destMat):
    return _sunlineUKF.ukfCholDecomp(sourceMat, nRow, nCol, destMat)
ukfCholDecomp = _sunlineUKF.ukfCholDecomp

def ukfCholDownDate(rMat, xVec, beta, nStates, rOut):
    return _sunlineUKF.ukfCholDownDate(rMat, xVec, beta, nStates, rOut)
ukfCholDownDate = _sunlineUKF.ukfCholDownDate
SKF_N_STATES = _sunlineUKF.SKF_N_STATES
SKF_N_STATES_SWITCH = _sunlineUKF.SKF_N_STATES_SWITCH
SKF_N_STATES_HALF = _sunlineUKF.SKF_N_STATES_HALF
MAX_N_CSS_MEAS = _sunlineUKF.MAX_N_CSS_MEAS
class SunlineFilterFswMsg(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, SunlineFilterFswMsg, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, SunlineFilterFswMsg, name)
    __repr__ = _swig_repr
    __swig_setmethods__["timeTag"] = _sunlineUKF.SunlineFilterFswMsg_timeTag_set
    __swig_getmethods__["timeTag"] = _sunlineUKF.SunlineFilterFswMsg_timeTag_get
    if _newclass:
        timeTag = _swig_property(_sunlineUKF.SunlineFilterFswMsg_timeTag_get, _sunlineUKF.SunlineFilterFswMsg_timeTag_set)
    __swig_setmethods__["covar"] = _sunlineUKF.SunlineFilterFswMsg_covar_set
    __swig_getmethods__["covar"] = _sunlineUKF.SunlineFilterFswMsg_covar_get
    if _newclass:
        covar = _swig_property(_sunlineUKF.SunlineFilterFswMsg_covar_get, _sunlineUKF.SunlineFilterFswMsg_covar_set)
    __swig_setmethods__["state"] = _sunlineUKF.SunlineFilterFswMsg_state_set
    __swig_getmethods__["state"] = _sunlineUKF.SunlineFilterFswMsg_state_get
    if _newclass:
        state = _swig_property(_sunlineUKF.SunlineFilterFswMsg_state_get, _sunlineUKF.SunlineFilterFswMsg_state_set)
    __swig_setmethods__["stateError"] = _sunlineUKF.SunlineFilterFswMsg_stateError_set
    __swig_getmethods__["stateError"] = _sunlineUKF.SunlineFilterFswMsg_stateError_get
    if _newclass:
        stateError = _swig_property(_sunlineUKF.SunlineFilterFswMsg_stateError_get, _sunlineUKF.SunlineFilterFswMsg_stateError_set)
    __swig_setmethods__["postFitRes"] = _sunlineUKF.SunlineFilterFswMsg_postFitRes_set
    __swig_getmethods__["postFitRes"] = _sunlineUKF.SunlineFilterFswMsg_postFitRes_get
    if _newclass:
        postFitRes = _swig_property(_sunlineUKF.SunlineFilterFswMsg_postFitRes_get, _sunlineUKF.SunlineFilterFswMsg_postFitRes_set)
    __swig_setmethods__["numObs"] = _sunlineUKF.SunlineFilterFswMsg_numObs_set
    __swig_getmethods__["numObs"] = _sunlineUKF.SunlineFilterFswMsg_numObs_get
    if _newclass:
        numObs = _swig_property(_sunlineUKF.SunlineFilterFswMsg_numObs_get, _sunlineUKF.SunlineFilterFswMsg_numObs_set)

    def __init__(self):
        this = _sunlineUKF.new_SunlineFilterFswMsg()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sunlineUKF.delete_SunlineFilterFswMsg
    __del__ = lambda self: None
SunlineFilterFswMsg_swigregister = _sunlineUKF.SunlineFilterFswMsg_swigregister
SunlineFilterFswMsg_swigregister(SunlineFilterFswMsg)

class CSSConfigFswMsg(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSSConfigFswMsg, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSSConfigFswMsg, name)
    __repr__ = _swig_repr
    __swig_setmethods__["nCSS"] = _sunlineUKF.CSSConfigFswMsg_nCSS_set
    __swig_getmethods__["nCSS"] = _sunlineUKF.CSSConfigFswMsg_nCSS_get
    if _newclass:
        nCSS = _swig_property(_sunlineUKF.CSSConfigFswMsg_nCSS_get, _sunlineUKF.CSSConfigFswMsg_nCSS_set)
    __swig_setmethods__["cssVals"] = _sunlineUKF.CSSConfigFswMsg_cssVals_set
    __swig_getmethods__["cssVals"] = _sunlineUKF.CSSConfigFswMsg_cssVals_get
    if _newclass:
        cssVals = _swig_property(_sunlineUKF.CSSConfigFswMsg_cssVals_get, _sunlineUKF.CSSConfigFswMsg_cssVals_set)

    def __init__(self):
        this = _sunlineUKF.new_CSSConfigFswMsg()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _sunlineUKF.delete_CSSConfigFswMsg
    __del__ = lambda self: None
CSSConfigFswMsg_swigregister = _sunlineUKF.CSSConfigFswMsg_swigregister
CSSConfigFswMsg_swigregister(CSSConfigFswMsg)


import sys
protectAllClasses(sys.modules[__name__])

# This file is compatible with both classic and new-style classes.


