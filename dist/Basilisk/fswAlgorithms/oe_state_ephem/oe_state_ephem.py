# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.12
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (2, 7, 0):
    def swig_import_helper():
        import importlib
        pkg = __name__.rpartition('.')[0]
        mname = '.'.join((pkg, '_oe_state_ephem')).lstrip('.')
        try:
            return importlib.import_module(mname)
        except ImportError:
            return importlib.import_module('_oe_state_ephem')
    _oe_state_ephem = swig_import_helper()
    del swig_import_helper
elif _swig_python_version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_oe_state_ephem', [dirname(__file__)])
        except ImportError:
            import _oe_state_ephem
            return _oe_state_ephem
        try:
            _mod = imp.load_module('_oe_state_ephem', fp, pathname, description)
        finally:
            if fp is not None:
                fp.close()
        return _mod
    _oe_state_ephem = swig_import_helper()
    del swig_import_helper
else:
    import _oe_state_ephem
del _swig_python_version_info

try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        if _newclass:
            object.__setattr__(self, name, value)
        else:
            self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except __builtin__.Exception:
    class _object:
        pass
    _newclass = 0


def new_doubleArray(nelements):
    return _oe_state_ephem.new_doubleArray(nelements)
new_doubleArray = _oe_state_ephem.new_doubleArray

def delete_doubleArray(ary):
    return _oe_state_ephem.delete_doubleArray(ary)
delete_doubleArray = _oe_state_ephem.delete_doubleArray

def doubleArray_getitem(ary, index):
    return _oe_state_ephem.doubleArray_getitem(ary, index)
doubleArray_getitem = _oe_state_ephem.doubleArray_getitem

def doubleArray_setitem(ary, index, value):
    return _oe_state_ephem.doubleArray_setitem(ary, index, value)
doubleArray_setitem = _oe_state_ephem.doubleArray_setitem

def new_longArray(nelements):
    return _oe_state_ephem.new_longArray(nelements)
new_longArray = _oe_state_ephem.new_longArray

def delete_longArray(ary):
    return _oe_state_ephem.delete_longArray(ary)
delete_longArray = _oe_state_ephem.delete_longArray

def longArray_getitem(ary, index):
    return _oe_state_ephem.longArray_getitem(ary, index)
longArray_getitem = _oe_state_ephem.longArray_getitem

def longArray_setitem(ary, index, value):
    return _oe_state_ephem.longArray_setitem(ary, index, value)
longArray_setitem = _oe_state_ephem.longArray_setitem

def new_intArray(nelements):
    return _oe_state_ephem.new_intArray(nelements)
new_intArray = _oe_state_ephem.new_intArray

def delete_intArray(ary):
    return _oe_state_ephem.delete_intArray(ary)
delete_intArray = _oe_state_ephem.delete_intArray

def intArray_getitem(ary, index):
    return _oe_state_ephem.intArray_getitem(ary, index)
intArray_getitem = _oe_state_ephem.intArray_getitem

def intArray_setitem(ary, index, value):
    return _oe_state_ephem.intArray_setitem(ary, index, value)
intArray_setitem = _oe_state_ephem.intArray_setitem

def new_shortArray(nelements):
    return _oe_state_ephem.new_shortArray(nelements)
new_shortArray = _oe_state_ephem.new_shortArray

def delete_shortArray(ary):
    return _oe_state_ephem.delete_shortArray(ary)
delete_shortArray = _oe_state_ephem.delete_shortArray

def shortArray_getitem(ary, index):
    return _oe_state_ephem.shortArray_getitem(ary, index)
shortArray_getitem = _oe_state_ephem.shortArray_getitem

def shortArray_setitem(ary, index, value):
    return _oe_state_ephem.shortArray_setitem(ary, index, value)
shortArray_setitem = _oe_state_ephem.shortArray_setitem


def getStructSize(self):
    try:
        return eval('sizeof_' + repr(self).split(';')[0].split('.')[-1])
    except (NameError) as e:
        typeString = 'sizeof_' + repr(self).split(';')[0].split('.')[-1]
        raise NameError(e.message + '\nYou tried to get this size macro: ' + typeString + 
            '\n It appears to be undefined.  \nYou need to run the SWIG GEN_SIZEOF' +  
            ' SWIG macro against the class/struct in your SWIG file if you want to ' + 
            ' make this call.\n')


def protectSetAttr(self, name, value):
    if(hasattr(self, name) or name == 'this'):
        object.__setattr__(self, name, value)
    else:
        raise ValueError('You tried to add this variable: ' + name + '\n' + 
            'To this class: ' + str(self))

def protectAllClasses(moduleType):
    import inspect
    clsmembers = inspect.getmembers(sys.modules[__name__], inspect.isclass)
    for member in clsmembers:
        try:
            exec(str(member[0]) + '.__setattr__ = protectSetAttr')
            exec(str(member[0]) + '.getStructSize = getStructSize') 
        except (AttributeError, TypeError) as e:
            pass


Update_oeStateEphem = _oe_state_ephem.Update_oeStateEphem
SelfInit_oeStateEphem = _oe_state_ephem.SelfInit_oeStateEphem
CrossInit_oeStateEphem = _oe_state_ephem.CrossInit_oeStateEphem
Reset_oeStateEphem = _oe_state_ephem.Reset_oeStateEphem
sizeof_TDBVehicleClockCorrelationFswMsg = _oe_state_ephem.sizeof_TDBVehicleClockCorrelationFswMsg
sizeof_EphemerisIntMsg = _oe_state_ephem.sizeof_EphemerisIntMsg
MAX_OE_RECORDS = _oe_state_ephem.MAX_OE_RECORDS
MAX_OE_COEFF = _oe_state_ephem.MAX_OE_COEFF
class ChebyOERecord(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ChebyOERecord, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ChebyOERecord, name)
    __repr__ = _swig_repr
    __swig_setmethods__["nChebCoeff"] = _oe_state_ephem.ChebyOERecord_nChebCoeff_set
    __swig_getmethods__["nChebCoeff"] = _oe_state_ephem.ChebyOERecord_nChebCoeff_get
    if _newclass:
        nChebCoeff = _swig_property(_oe_state_ephem.ChebyOERecord_nChebCoeff_get, _oe_state_ephem.ChebyOERecord_nChebCoeff_set)
    __swig_setmethods__["ephemTimeMid"] = _oe_state_ephem.ChebyOERecord_ephemTimeMid_set
    __swig_getmethods__["ephemTimeMid"] = _oe_state_ephem.ChebyOERecord_ephemTimeMid_get
    if _newclass:
        ephemTimeMid = _swig_property(_oe_state_ephem.ChebyOERecord_ephemTimeMid_get, _oe_state_ephem.ChebyOERecord_ephemTimeMid_set)
    __swig_setmethods__["ephemTimeRad"] = _oe_state_ephem.ChebyOERecord_ephemTimeRad_set
    __swig_getmethods__["ephemTimeRad"] = _oe_state_ephem.ChebyOERecord_ephemTimeRad_get
    if _newclass:
        ephemTimeRad = _swig_property(_oe_state_ephem.ChebyOERecord_ephemTimeRad_get, _oe_state_ephem.ChebyOERecord_ephemTimeRad_set)
    __swig_setmethods__["semiMajorCoeff"] = _oe_state_ephem.ChebyOERecord_semiMajorCoeff_set
    __swig_getmethods__["semiMajorCoeff"] = _oe_state_ephem.ChebyOERecord_semiMajorCoeff_get
    if _newclass:
        semiMajorCoeff = _swig_property(_oe_state_ephem.ChebyOERecord_semiMajorCoeff_get, _oe_state_ephem.ChebyOERecord_semiMajorCoeff_set)
    __swig_setmethods__["eccCoeff"] = _oe_state_ephem.ChebyOERecord_eccCoeff_set
    __swig_getmethods__["eccCoeff"] = _oe_state_ephem.ChebyOERecord_eccCoeff_get
    if _newclass:
        eccCoeff = _swig_property(_oe_state_ephem.ChebyOERecord_eccCoeff_get, _oe_state_ephem.ChebyOERecord_eccCoeff_set)
    __swig_setmethods__["incCoeff"] = _oe_state_ephem.ChebyOERecord_incCoeff_set
    __swig_getmethods__["incCoeff"] = _oe_state_ephem.ChebyOERecord_incCoeff_get
    if _newclass:
        incCoeff = _swig_property(_oe_state_ephem.ChebyOERecord_incCoeff_get, _oe_state_ephem.ChebyOERecord_incCoeff_set)
    __swig_setmethods__["argPerCoeff"] = _oe_state_ephem.ChebyOERecord_argPerCoeff_set
    __swig_getmethods__["argPerCoeff"] = _oe_state_ephem.ChebyOERecord_argPerCoeff_get
    if _newclass:
        argPerCoeff = _swig_property(_oe_state_ephem.ChebyOERecord_argPerCoeff_get, _oe_state_ephem.ChebyOERecord_argPerCoeff_set)
    __swig_setmethods__["RAANCoeff"] = _oe_state_ephem.ChebyOERecord_RAANCoeff_set
    __swig_getmethods__["RAANCoeff"] = _oe_state_ephem.ChebyOERecord_RAANCoeff_get
    if _newclass:
        RAANCoeff = _swig_property(_oe_state_ephem.ChebyOERecord_RAANCoeff_get, _oe_state_ephem.ChebyOERecord_RAANCoeff_set)
    __swig_setmethods__["meanAnomCoeff"] = _oe_state_ephem.ChebyOERecord_meanAnomCoeff_set
    __swig_getmethods__["meanAnomCoeff"] = _oe_state_ephem.ChebyOERecord_meanAnomCoeff_get
    if _newclass:
        meanAnomCoeff = _swig_property(_oe_state_ephem.ChebyOERecord_meanAnomCoeff_get, _oe_state_ephem.ChebyOERecord_meanAnomCoeff_set)

    def __init__(self):
        this = _oe_state_ephem.new_ChebyOERecord()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _oe_state_ephem.delete_ChebyOERecord
    __del__ = lambda self: None
ChebyOERecord_swigregister = _oe_state_ephem.ChebyOERecord_swigregister
ChebyOERecord_swigregister(ChebyOERecord)

class OEStateEphemData(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, OEStateEphemData, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, OEStateEphemData, name)
    __repr__ = _swig_repr
    __swig_setmethods__["stateFitOutMsgName"] = _oe_state_ephem.OEStateEphemData_stateFitOutMsgName_set
    __swig_getmethods__["stateFitOutMsgName"] = _oe_state_ephem.OEStateEphemData_stateFitOutMsgName_get
    if _newclass:
        stateFitOutMsgName = _swig_property(_oe_state_ephem.OEStateEphemData_stateFitOutMsgName_get, _oe_state_ephem.OEStateEphemData_stateFitOutMsgName_set)
    __swig_setmethods__["clockCorrInMsgName"] = _oe_state_ephem.OEStateEphemData_clockCorrInMsgName_set
    __swig_getmethods__["clockCorrInMsgName"] = _oe_state_ephem.OEStateEphemData_clockCorrInMsgName_get
    if _newclass:
        clockCorrInMsgName = _swig_property(_oe_state_ephem.OEStateEphemData_clockCorrInMsgName_get, _oe_state_ephem.OEStateEphemData_clockCorrInMsgName_set)
    __swig_setmethods__["muCentral"] = _oe_state_ephem.OEStateEphemData_muCentral_set
    __swig_getmethods__["muCentral"] = _oe_state_ephem.OEStateEphemData_muCentral_get
    if _newclass:
        muCentral = _swig_property(_oe_state_ephem.OEStateEphemData_muCentral_get, _oe_state_ephem.OEStateEphemData_muCentral_set)
    __swig_setmethods__["ephArray"] = _oe_state_ephem.OEStateEphemData_ephArray_set
    __swig_getmethods__["ephArray"] = _oe_state_ephem.OEStateEphemData_ephArray_get
    if _newclass:
        ephArray = _swig_property(_oe_state_ephem.OEStateEphemData_ephArray_get, _oe_state_ephem.OEStateEphemData_ephArray_set)
    __swig_setmethods__["stateFitOutMsgID"] = _oe_state_ephem.OEStateEphemData_stateFitOutMsgID_set
    __swig_getmethods__["stateFitOutMsgID"] = _oe_state_ephem.OEStateEphemData_stateFitOutMsgID_get
    if _newclass:
        stateFitOutMsgID = _swig_property(_oe_state_ephem.OEStateEphemData_stateFitOutMsgID_get, _oe_state_ephem.OEStateEphemData_stateFitOutMsgID_set)
    __swig_setmethods__["clockCorrInMsgID"] = _oe_state_ephem.OEStateEphemData_clockCorrInMsgID_set
    __swig_getmethods__["clockCorrInMsgID"] = _oe_state_ephem.OEStateEphemData_clockCorrInMsgID_get
    if _newclass:
        clockCorrInMsgID = _swig_property(_oe_state_ephem.OEStateEphemData_clockCorrInMsgID_get, _oe_state_ephem.OEStateEphemData_clockCorrInMsgID_set)
    __swig_setmethods__["coeffSelector"] = _oe_state_ephem.OEStateEphemData_coeffSelector_set
    __swig_getmethods__["coeffSelector"] = _oe_state_ephem.OEStateEphemData_coeffSelector_get
    if _newclass:
        coeffSelector = _swig_property(_oe_state_ephem.OEStateEphemData_coeffSelector_get, _oe_state_ephem.OEStateEphemData_coeffSelector_set)
    __swig_setmethods__["outputState"] = _oe_state_ephem.OEStateEphemData_outputState_set
    __swig_getmethods__["outputState"] = _oe_state_ephem.OEStateEphemData_outputState_get
    if _newclass:
        outputState = _swig_property(_oe_state_ephem.OEStateEphemData_outputState_get, _oe_state_ephem.OEStateEphemData_outputState_set)

    def __init__(self):
        this = _oe_state_ephem.new_OEStateEphemData()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _oe_state_ephem.delete_OEStateEphemData
    __del__ = lambda self: None
OEStateEphemData_swigregister = _oe_state_ephem.OEStateEphemData_swigregister
OEStateEphemData_swigregister(OEStateEphemData)

class TDBVehicleClockCorrelationFswMsg(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, TDBVehicleClockCorrelationFswMsg, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, TDBVehicleClockCorrelationFswMsg, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ephemerisTime"] = _oe_state_ephem.TDBVehicleClockCorrelationFswMsg_ephemerisTime_set
    __swig_getmethods__["ephemerisTime"] = _oe_state_ephem.TDBVehicleClockCorrelationFswMsg_ephemerisTime_get
    if _newclass:
        ephemerisTime = _swig_property(_oe_state_ephem.TDBVehicleClockCorrelationFswMsg_ephemerisTime_get, _oe_state_ephem.TDBVehicleClockCorrelationFswMsg_ephemerisTime_set)
    __swig_setmethods__["vehicleClockTime"] = _oe_state_ephem.TDBVehicleClockCorrelationFswMsg_vehicleClockTime_set
    __swig_getmethods__["vehicleClockTime"] = _oe_state_ephem.TDBVehicleClockCorrelationFswMsg_vehicleClockTime_get
    if _newclass:
        vehicleClockTime = _swig_property(_oe_state_ephem.TDBVehicleClockCorrelationFswMsg_vehicleClockTime_get, _oe_state_ephem.TDBVehicleClockCorrelationFswMsg_vehicleClockTime_set)

    def __init__(self):
        this = _oe_state_ephem.new_TDBVehicleClockCorrelationFswMsg()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _oe_state_ephem.delete_TDBVehicleClockCorrelationFswMsg
    __del__ = lambda self: None
TDBVehicleClockCorrelationFswMsg_swigregister = _oe_state_ephem.TDBVehicleClockCorrelationFswMsg_swigregister
TDBVehicleClockCorrelationFswMsg_swigregister(TDBVehicleClockCorrelationFswMsg)

class EphemerisIntMsg(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, EphemerisIntMsg, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, EphemerisIntMsg, name)
    __repr__ = _swig_repr
    __swig_setmethods__["r_BdyZero_N"] = _oe_state_ephem.EphemerisIntMsg_r_BdyZero_N_set
    __swig_getmethods__["r_BdyZero_N"] = _oe_state_ephem.EphemerisIntMsg_r_BdyZero_N_get
    if _newclass:
        r_BdyZero_N = _swig_property(_oe_state_ephem.EphemerisIntMsg_r_BdyZero_N_get, _oe_state_ephem.EphemerisIntMsg_r_BdyZero_N_set)
    __swig_setmethods__["v_BdyZero_N"] = _oe_state_ephem.EphemerisIntMsg_v_BdyZero_N_set
    __swig_getmethods__["v_BdyZero_N"] = _oe_state_ephem.EphemerisIntMsg_v_BdyZero_N_get
    if _newclass:
        v_BdyZero_N = _swig_property(_oe_state_ephem.EphemerisIntMsg_v_BdyZero_N_get, _oe_state_ephem.EphemerisIntMsg_v_BdyZero_N_set)
    __swig_setmethods__["timeTag"] = _oe_state_ephem.EphemerisIntMsg_timeTag_set
    __swig_getmethods__["timeTag"] = _oe_state_ephem.EphemerisIntMsg_timeTag_get
    if _newclass:
        timeTag = _swig_property(_oe_state_ephem.EphemerisIntMsg_timeTag_get, _oe_state_ephem.EphemerisIntMsg_timeTag_set)

    def __init__(self):
        this = _oe_state_ephem.new_EphemerisIntMsg()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _oe_state_ephem.delete_EphemerisIntMsg
    __del__ = lambda self: None
EphemerisIntMsg_swigregister = _oe_state_ephem.EphemerisIntMsg_swigregister
EphemerisIntMsg_swigregister(EphemerisIntMsg)


import sys
protectAllClasses(sys.modules[__name__])

# This file is compatible with both classic and new-style classes.


