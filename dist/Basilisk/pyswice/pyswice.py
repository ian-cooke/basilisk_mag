# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.12
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (2, 7, 0):
    def swig_import_helper():
        import importlib
        pkg = __name__.rpartition('.')[0]
        mname = '.'.join((pkg, '_pyswice')).lstrip('.')
        try:
            return importlib.import_module(mname)
        except ImportError:
            return importlib.import_module('_pyswice')
    _pyswice = swig_import_helper()
    del swig_import_helper
elif _swig_python_version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_pyswice', [dirname(__file__)])
        except ImportError:
            import _pyswice
            return _pyswice
        try:
            _mod = imp.load_module('_pyswice', fp, pathname, description)
        finally:
            if fp is not None:
                fp.close()
        return _mod
    _pyswice = swig_import_helper()
    del swig_import_helper
else:
    import _pyswice
del _swig_python_version_info

try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        if _newclass:
            object.__setattr__(self, name, value)
        else:
            self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except __builtin__.Exception:
    class _object:
        pass
    _newclass = 0


def new_doubleArray(nelements):
    return _pyswice.new_doubleArray(nelements)
new_doubleArray = _pyswice.new_doubleArray

def delete_doubleArray(ary):
    return _pyswice.delete_doubleArray(ary)
delete_doubleArray = _pyswice.delete_doubleArray

def doubleArray_getitem(ary, index):
    return _pyswice.doubleArray_getitem(ary, index)
doubleArray_getitem = _pyswice.doubleArray_getitem

def doubleArray_setitem(ary, index, value):
    return _pyswice.doubleArray_setitem(ary, index, value)
doubleArray_setitem = _pyswice.doubleArray_setitem

def new_intArray(nelements):
    return _pyswice.new_intArray(nelements)
new_intArray = _pyswice.new_intArray

def delete_intArray(ary):
    return _pyswice.delete_intArray(ary)
delete_intArray = _pyswice.delete_intArray

def intArray_getitem(ary, index):
    return _pyswice.intArray_getitem(ary, index)
intArray_getitem = _pyswice.intArray_getitem

def intArray_setitem(ary, index, value):
    return _pyswice.intArray_setitem(ary, index, value)
intArray_setitem = _pyswice.intArray_setitem

def appndc_c(item, cell):
    return _pyswice.appndc_c(item, cell)
appndc_c = _pyswice.appndc_c

def appndd_c(item, cell):
    return _pyswice.appndd_c(item, cell)
appndd_c = _pyswice.appndd_c

def appndi_c(item, cell):
    return _pyswice.appndi_c(item, cell)
appndi_c = _pyswice.appndi_c

def axisar_c(axis, angle, r):
    return _pyswice.axisar_c(axis, angle, r)
axisar_c = _pyswice.axisar_c

def badkpv_c(caller, name, comp, size, divby, type):
    return _pyswice.badkpv_c(caller, name, comp, size, divby, type)
badkpv_c = _pyswice.badkpv_c

def bltfrm_c(frmcls, idset):
    return _pyswice.bltfrm_c(frmcls, idset)
bltfrm_c = _pyswice.bltfrm_c

def bodc2n_c(code, namelen, name, found):
    return _pyswice.bodc2n_c(code, namelen, name, found)
bodc2n_c = _pyswice.bodc2n_c

def bodc2s_c(code, lenout, name):
    return _pyswice.bodc2s_c(code, lenout, name)
bodc2s_c = _pyswice.bodc2s_c

def boddef_c(name, code):
    return _pyswice.boddef_c(name, code)
boddef_c = _pyswice.boddef_c

def bodfnd_c(body, item):
    return _pyswice.bodfnd_c(body, item)
bodfnd_c = _pyswice.bodfnd_c

def bodn2c_c(name, code, found):
    return _pyswice.bodn2c_c(name, code, found)
bodn2c_c = _pyswice.bodn2c_c

def bods2c_c(name, code, found):
    return _pyswice.bods2c_c(name, code, found)
bods2c_c = _pyswice.bods2c_c

def bodvar_c(body, item, dim, values):
    return _pyswice.bodvar_c(body, item, dim, values)
bodvar_c = _pyswice.bodvar_c

def bodvcd_c(body, item, maxn, dim, values):
    return _pyswice.bodvcd_c(body, item, maxn, dim, values)
bodvcd_c = _pyswice.bodvcd_c

def bodvrd_c(body, item, maxn, dim, values):
    return _pyswice.bodvrd_c(body, item, maxn, dim, values)
bodvrd_c = _pyswice.bodvrd_c

def brcktd_c(number, end1, end2):
    return _pyswice.brcktd_c(number, end1, end2)
brcktd_c = _pyswice.brcktd_c

def brckti_c(number, end1, end2):
    return _pyswice.brckti_c(number, end1, end2)
brckti_c = _pyswice.brckti_c

def bschoc_c(value, ndim, lenvals, array, order):
    return _pyswice.bschoc_c(value, ndim, lenvals, array, order)
bschoc_c = _pyswice.bschoc_c

def bschoi_c(value, ndim, array, order):
    return _pyswice.bschoi_c(value, ndim, array, order)
bschoi_c = _pyswice.bschoi_c

def bsrchc_c(value, ndim, lenvals, array):
    return _pyswice.bsrchc_c(value, ndim, lenvals, array)
bsrchc_c = _pyswice.bsrchc_c

def bsrchd_c(value, ndim, array):
    return _pyswice.bsrchd_c(value, ndim, array)
bsrchd_c = _pyswice.bsrchd_c

def bsrchi_c(value, ndim, array):
    return _pyswice.bsrchi_c(value, ndim, array)
bsrchi_c = _pyswice.bsrchi_c

def b1900_c():
    return _pyswice.b1900_c()
b1900_c = _pyswice.b1900_c

def b1950_c():
    return _pyswice.b1950_c()
b1950_c = _pyswice.b1950_c

def card_c(cell):
    return _pyswice.card_c(cell)
card_c = _pyswice.card_c

def ccifrm_c(frclss, clssid, lenout, frcode, frname, center, found):
    return _pyswice.ccifrm_c(frclss, clssid, lenout, frcode, frname, center, found)
ccifrm_c = _pyswice.ccifrm_c

def cgv2el_c(center, vec1, vec2, ellipse):
    return _pyswice.cgv2el_c(center, vec1, vec2, ellipse)
cgv2el_c = _pyswice.cgv2el_c

def chkin_c(module):
    return _pyswice.chkin_c(module)
chkin_c = _pyswice.chkin_c

def chkout_c(module):
    return _pyswice.chkout_c(module)
chkout_c = _pyswice.chkout_c

def cidfrm_c(cent, lenout, frcode, frname, found):
    return _pyswice.cidfrm_c(cent, lenout, frcode, frname, found)
cidfrm_c = _pyswice.cidfrm_c

def ckcls_c(handle):
    return _pyswice.ckcls_c(handle)
ckcls_c = _pyswice.ckcls_c

def ckcov_c(ck, idcode, needav, level, tol, timsys, cover):
    return _pyswice.ckcov_c(ck, idcode, needav, level, tol, timsys, cover)
ckcov_c = _pyswice.ckcov_c

def ckobj_c(ck, ids):
    return _pyswice.ckobj_c(ck, ids)
ckobj_c = _pyswice.ckobj_c

def ckgp_c(inst, sclkdp, tol, ref, cmat, clkout, found):
    return _pyswice.ckgp_c(inst, sclkdp, tol, ref, cmat, clkout, found)
ckgp_c = _pyswice.ckgp_c

def ckgpav_c(inst, sclkdp, tol, ref, cmat, av, clkout, found):
    return _pyswice.ckgpav_c(inst, sclkdp, tol, ref, cmat, av, clkout, found)
ckgpav_c = _pyswice.ckgpav_c

def cklpf_c(fname, handle):
    return _pyswice.cklpf_c(fname, handle)
cklpf_c = _pyswice.cklpf_c

def ckopn_c(name, ifname, ncomch, handle):
    return _pyswice.ckopn_c(name, ifname, ncomch, handle)
ckopn_c = _pyswice.ckopn_c

def ckupf_c(handle):
    return _pyswice.ckupf_c(handle)
ckupf_c = _pyswice.ckupf_c

def ckw01_c(handle, begtime, endtime, inst, ref, avflag, segid, nrec, sclkdp, quats, avvs):
    return _pyswice.ckw01_c(handle, begtime, endtime, inst, ref, avflag, segid, nrec, sclkdp, quats, avvs)
ckw01_c = _pyswice.ckw01_c

def ckw02_c(handle, begtim, endtim, inst, ref, segid, nrec, start, stop, quats, avvs, rates):
    return _pyswice.ckw02_c(handle, begtim, endtim, inst, ref, segid, nrec, start, stop, quats, avvs, rates)
ckw02_c = _pyswice.ckw02_c

def ckw03_c(handle, begtim, endtim, inst, ref, avflag, segid, nrec, sclkdp, quats, avvs, nints, starts):
    return _pyswice.ckw03_c(handle, begtim, endtim, inst, ref, avflag, segid, nrec, sclkdp, quats, avvs, nints, starts)
ckw03_c = _pyswice.ckw03_c

def ckw05_c(handle, subtyp, degree, begtim, endtim, inst, ref, avflag, segid, n, sclkdp, packets, rate, nints, starts):
    return _pyswice.ckw05_c(handle, subtyp, degree, begtim, endtim, inst, ref, avflag, segid, n, sclkdp, packets, rate, nints, starts)
ckw05_c = _pyswice.ckw05_c

def clight_c():
    return _pyswice.clight_c()
clight_c = _pyswice.clight_c

def clpool_c():
    return _pyswice.clpool_c()
clpool_c = _pyswice.clpool_c

def cmprss_c(delim, n, input, lenout, output):
    return _pyswice.cmprss_c(delim, n, input, lenout, output)
cmprss_c = _pyswice.cmprss_c

def cnmfrm_c(cname, lenout, frcode, frname, found):
    return _pyswice.cnmfrm_c(cname, lenout, frcode, frname, found)
cnmfrm_c = _pyswice.cnmfrm_c

def conics_c(elts, et, state):
    return _pyswice.conics_c(elts, et, state)
conics_c = _pyswice.conics_c

def convrt_c(x, arg2, out, y):
    return _pyswice.convrt_c(x, arg2, out, y)
convrt_c = _pyswice.convrt_c

def copy_c(a, b):
    return _pyswice.copy_c(a, b)
copy_c = _pyswice.copy_c

def cpos_c(str, chars, start):
    return _pyswice.cpos_c(str, chars, start)
cpos_c = _pyswice.cpos_c

def cposr_c(str, chars, start):
    return _pyswice.cposr_c(str, chars, start)
cposr_c = _pyswice.cposr_c

def cvpool_c(agent, update):
    return _pyswice.cvpool_c(agent, update)
cvpool_c = _pyswice.cvpool_c

def cyllat_c(r, lonc, z, radius, lon, lat):
    return _pyswice.cyllat_c(r, lonc, z, radius, lon, lat)
cyllat_c = _pyswice.cyllat_c

def cylrec_c(r, lon, z, rectan):
    return _pyswice.cylrec_c(r, lon, z, rectan)
cylrec_c = _pyswice.cylrec_c

def cylsph_c(r, lonc, z, radius, colat, lon):
    return _pyswice.cylsph_c(r, lonc, z, radius, colat, lon)
cylsph_c = _pyswice.cylsph_c

def dafac_c(handle, n, lenvals, buffer):
    return _pyswice.dafac_c(handle, n, lenvals, buffer)
dafac_c = _pyswice.dafac_c

def dafbbs_c(handle):
    return _pyswice.dafbbs_c(handle)
dafbbs_c = _pyswice.dafbbs_c

def dafbfs_c(handle):
    return _pyswice.dafbfs_c(handle)
dafbfs_c = _pyswice.dafbfs_c

def dafcls_c(handle):
    return _pyswice.dafcls_c(handle)
dafcls_c = _pyswice.dafcls_c

def dafcs_c(handle):
    return _pyswice.dafcs_c(handle)
dafcs_c = _pyswice.dafcs_c

def dafdc_c(handle):
    return _pyswice.dafdc_c(handle)
dafdc_c = _pyswice.dafdc_c

def dafec_c(handle, bufsiz, lenout, n, buffer, done):
    return _pyswice.dafec_c(handle, bufsiz, lenout, n, buffer, done)
dafec_c = _pyswice.dafec_c

def daffna_c(found):
    return _pyswice.daffna_c(found)
daffna_c = _pyswice.daffna_c

def daffpa_c(found):
    return _pyswice.daffpa_c(found)
daffpa_c = _pyswice.daffpa_c

def dafgda_c(handle, begin, end, data):
    return _pyswice.dafgda_c(handle, begin, end, data)
dafgda_c = _pyswice.dafgda_c

def dafgh_c(handle):
    return _pyswice.dafgh_c(handle)
dafgh_c = _pyswice.dafgh_c

def dafgn_c(lenout, name):
    return _pyswice.dafgn_c(lenout, name)
dafgn_c = _pyswice.dafgn_c

def dafgs_c(sum):
    return _pyswice.dafgs_c(sum)
dafgs_c = _pyswice.dafgs_c

def dafgsr_c(handle, recno, begin, end, data, found):
    return _pyswice.dafgsr_c(handle, recno, begin, end, data, found)
dafgsr_c = _pyswice.dafgsr_c

def dafopr_c(fname, handle):
    return _pyswice.dafopr_c(fname, handle)
dafopr_c = _pyswice.dafopr_c

def dafopw_c(fname, handle):
    return _pyswice.dafopw_c(fname, handle)
dafopw_c = _pyswice.dafopw_c

def dafps_c(nd, ni, dc, ic, sum):
    return _pyswice.dafps_c(nd, ni, dc, ic, sum)
dafps_c = _pyswice.dafps_c

def dafrda_c(handle, begin, end, data):
    return _pyswice.dafrda_c(handle, begin, end, data)
dafrda_c = _pyswice.dafrda_c

def dafrfr_c(handle, lenout, nd, ni, ifname, fward, bward, free):
    return _pyswice.dafrfr_c(handle, lenout, nd, ni, ifname, fward, bward, free)
dafrfr_c = _pyswice.dafrfr_c

def dafrs_c(sum):
    return _pyswice.dafrs_c(sum)
dafrs_c = _pyswice.dafrs_c

def dafus_c(sum, nd, ni, dc, ic):
    return _pyswice.dafus_c(sum, nd, ni, dc, ic)
dafus_c = _pyswice.dafus_c

def dasac_c(handle, n, buflen, buffer):
    return _pyswice.dasac_c(handle, n, buflen, buffer)
dasac_c = _pyswice.dasac_c

def dascls_c(handle):
    return _pyswice.dascls_c(handle)
dascls_c = _pyswice.dascls_c

def dasec_c(handle, bufsiz, buflen, n, buffer, done):
    return _pyswice.dasec_c(handle, bufsiz, buflen, n, buffer, done)
dasec_c = _pyswice.dasec_c

def dasopr_c(fname, handle):
    return _pyswice.dasopr_c(fname, handle)
dasopr_c = _pyswice.dasopr_c

def dcyldr_c(x, y, z, jacobi):
    return _pyswice.dcyldr_c(x, y, z, jacobi)
dcyldr_c = _pyswice.dcyldr_c

def deltet_c(epoch, eptype, delta):
    return _pyswice.deltet_c(epoch, eptype, delta)
deltet_c = _pyswice.deltet_c

def det_c(m1):
    return _pyswice.det_c(m1)
det_c = _pyswice.det_c

def diags2_c(symmat, diag, rotate):
    return _pyswice.diags2_c(symmat, diag, rotate)
diags2_c = _pyswice.diags2_c

def diff_c(a, b, c):
    return _pyswice.diff_c(a, b, c)
diff_c = _pyswice.diff_c

def dgeodr_c(x, y, z, re, f, jacobi):
    return _pyswice.dgeodr_c(x, y, z, re, f, jacobi)
dgeodr_c = _pyswice.dgeodr_c

def dlatdr_c(x, y, z, jacobi):
    return _pyswice.dlatdr_c(x, y, z, jacobi)
dlatdr_c = _pyswice.dlatdr_c

def dp2hx_c(number, lenout, string, length):
    return _pyswice.dp2hx_c(number, lenout, string, length)
dp2hx_c = _pyswice.dp2hx_c

def dpgrdr_c(body, x, y, z, re, f, jacobi):
    return _pyswice.dpgrdr_c(body, x, y, z, re, f, jacobi)
dpgrdr_c = _pyswice.dpgrdr_c

def dpmax_c():
    return _pyswice.dpmax_c()
dpmax_c = _pyswice.dpmax_c

def dpmax_():
    return _pyswice.dpmax_()
dpmax_ = _pyswice.dpmax_

def dpmin_c():
    return _pyswice.dpmin_c()
dpmin_c = _pyswice.dpmin_c

def dpmin_():
    return _pyswice.dpmin_()
dpmin_ = _pyswice.dpmin_

def dpr_c():
    return _pyswice.dpr_c()
dpr_c = _pyswice.dpr_c

def drdcyl_c(r, lon, z, jacobi):
    return _pyswice.drdcyl_c(r, lon, z, jacobi)
drdcyl_c = _pyswice.drdcyl_c

def drdgeo_c(lon, lat, alt, re, f, jacobi):
    return _pyswice.drdgeo_c(lon, lat, alt, re, f, jacobi)
drdgeo_c = _pyswice.drdgeo_c

def drdlat_c(r, lon, lat, jacobi):
    return _pyswice.drdlat_c(r, lon, lat, jacobi)
drdlat_c = _pyswice.drdlat_c

def drdpgr_c(body, lon, lat, alt, re, f, jacobi):
    return _pyswice.drdpgr_c(body, lon, lat, alt, re, f, jacobi)
drdpgr_c = _pyswice.drdpgr_c

def drdsph_c(r, colat, lon, jacobi):
    return _pyswice.drdsph_c(r, colat, lon, jacobi)
drdsph_c = _pyswice.drdsph_c

def dsphdr_c(x, y, z, jacobi):
    return _pyswice.dsphdr_c(x, y, z, jacobi)
dsphdr_c = _pyswice.dsphdr_c

def dtpool_c(name, found, n, type):
    return _pyswice.dtpool_c(name, found, n, type)
dtpool_c = _pyswice.dtpool_c

def ducrss_c(s1, s2, sout):
    return _pyswice.ducrss_c(s1, s2, sout)
ducrss_c = _pyswice.ducrss_c

def dvcrss_c(s1, s2, sout):
    return _pyswice.dvcrss_c(s1, s2, sout)
dvcrss_c = _pyswice.dvcrss_c

def dvdot_c(s1, s2):
    return _pyswice.dvdot_c(s1, s2)
dvdot_c = _pyswice.dvdot_c

def dvhat_c(s1, sout):
    return _pyswice.dvhat_c(s1, sout)
dvhat_c = _pyswice.dvhat_c

def dvnorm_c(state):
    return _pyswice.dvnorm_c(state)
dvnorm_c = _pyswice.dvnorm_c

def dvpool_c(name):
    return _pyswice.dvpool_c(name)
dvpool_c = _pyswice.dvpool_c

def dvsep_c(s1, s2):
    return _pyswice.dvsep_c(s1, s2)
dvsep_c = _pyswice.dvsep_c

def edlimb_c(a, b, c, viewpt, limb):
    return _pyswice.edlimb_c(a, b, c, viewpt, limb)
edlimb_c = _pyswice.edlimb_c

def edterm_c(trmtyp, source, target, et, fixfrm, abcorr, obsrvr, npts, trgepc, obspos, termpts):
    return _pyswice.edterm_c(trmtyp, source, target, et, fixfrm, abcorr, obsrvr, npts, trgepc, obspos, termpts)
edterm_c = _pyswice.edterm_c

def ekacec_c(handle, segno, recno, column, nvals, vallen, cvals, isnull):
    return _pyswice.ekacec_c(handle, segno, recno, column, nvals, vallen, cvals, isnull)
ekacec_c = _pyswice.ekacec_c

def ekaced_c(handle, segno, recno, column, nvals, dvals, isnull):
    return _pyswice.ekaced_c(handle, segno, recno, column, nvals, dvals, isnull)
ekaced_c = _pyswice.ekaced_c

def ekacei_c(handle, segno, recno, column, nvals, ivals, isnull):
    return _pyswice.ekacei_c(handle, segno, recno, column, nvals, ivals, isnull)
ekacei_c = _pyswice.ekacei_c

def ekaclc_c(handle, segno, column, vallen, cvals, entszs, nlflgs, rcptrs, wkindx):
    return _pyswice.ekaclc_c(handle, segno, column, vallen, cvals, entszs, nlflgs, rcptrs, wkindx)
ekaclc_c = _pyswice.ekaclc_c

def ekacld_c(handle, segno, column, dvals, entszs, nlflgs, rcptrs, wkindx):
    return _pyswice.ekacld_c(handle, segno, column, dvals, entszs, nlflgs, rcptrs, wkindx)
ekacld_c = _pyswice.ekacld_c

def ekacli_c(handle, segno, column, ivals, entszs, nlflgs, rcptrs, wkindx):
    return _pyswice.ekacli_c(handle, segno, column, ivals, entszs, nlflgs, rcptrs, wkindx)
ekacli_c = _pyswice.ekacli_c

def ekappr_c(handle, segno, recno):
    return _pyswice.ekappr_c(handle, segno, recno)
ekappr_c = _pyswice.ekappr_c

def ekbseg_c(handle, tabnam, ncols, cnmlen, cnames, declen, decls, segno):
    return _pyswice.ekbseg_c(handle, tabnam, ncols, cnmlen, cnames, declen, decls, segno)
ekbseg_c = _pyswice.ekbseg_c

def ekccnt_c(table, ccount):
    return _pyswice.ekccnt_c(table, ccount)
ekccnt_c = _pyswice.ekccnt_c

def ekcii_c(table, cindex, lenout, column, attdsc):
    return _pyswice.ekcii_c(table, cindex, lenout, column, attdsc)
ekcii_c = _pyswice.ekcii_c

def ekcls_c(handle):
    return _pyswice.ekcls_c(handle)
ekcls_c = _pyswice.ekcls_c

def ekdelr_c(handle, segno, recno):
    return _pyswice.ekdelr_c(handle, segno, recno)
ekdelr_c = _pyswice.ekdelr_c

def ekffld_c(handle, segno, rcptrs):
    return _pyswice.ekffld_c(handle, segno, rcptrs)
ekffld_c = _pyswice.ekffld_c

def ekfind_c(query, lenout, nmrows, error, errmsg):
    return _pyswice.ekfind_c(query, lenout, nmrows, error, errmsg)
ekfind_c = _pyswice.ekfind_c

def ekgc_c(selidx, row, elment, lenout, cdata, null, found):
    return _pyswice.ekgc_c(selidx, row, elment, lenout, cdata, null, found)
ekgc_c = _pyswice.ekgc_c

def ekgd_c(selidx, row, elment, ddata, null, found):
    return _pyswice.ekgd_c(selidx, row, elment, ddata, null, found)
ekgd_c = _pyswice.ekgd_c

def ekgi_c(selidx, row, elment, idata, null, found):
    return _pyswice.ekgi_c(selidx, row, elment, idata, null, found)
ekgi_c = _pyswice.ekgi_c

def ekifld_c(handle, tabnam, ncols, nrows, cnmlen, cnames, declen, decls, segno, rcptrs):
    return _pyswice.ekifld_c(handle, tabnam, ncols, nrows, cnmlen, cnames, declen, decls, segno, rcptrs)
ekifld_c = _pyswice.ekifld_c

def ekinsr_c(handle, segno, recno):
    return _pyswice.ekinsr_c(handle, segno, recno)
ekinsr_c = _pyswice.ekinsr_c

def eklef_c(fname, handle):
    return _pyswice.eklef_c(fname, handle)
eklef_c = _pyswice.eklef_c

def eknelt_c(selidx, row):
    return _pyswice.eknelt_c(selidx, row)
eknelt_c = _pyswice.eknelt_c

def eknseg_c(handle):
    return _pyswice.eknseg_c(handle)
eknseg_c = _pyswice.eknseg_c

def ekntab_c(n):
    return _pyswice.ekntab_c(n)
ekntab_c = _pyswice.ekntab_c

def ekopn_c(fname, ifname, ncomch, handle):
    return _pyswice.ekopn_c(fname, ifname, ncomch, handle)
ekopn_c = _pyswice.ekopn_c

def ekopr_c(fname, handle):
    return _pyswice.ekopr_c(fname, handle)
ekopr_c = _pyswice.ekopr_c

def ekops_c(handle):
    return _pyswice.ekops_c(handle)
ekops_c = _pyswice.ekops_c

def ekopw_c(fname, handle):
    return _pyswice.ekopw_c(fname, handle)
ekopw_c = _pyswice.ekopw_c

def ekpsel_c(query, msglen, tablen, collen, n, xbegs, xends, xtypes, xclass, tabs, cols, error, errmsg):
    return _pyswice.ekpsel_c(query, msglen, tablen, collen, n, xbegs, xends, xtypes, xclass, tabs, cols, error, errmsg)
ekpsel_c = _pyswice.ekpsel_c

def ekrcec_c(handle, segno, recno, column, lenout, nvals, cvals, isnull):
    return _pyswice.ekrcec_c(handle, segno, recno, column, lenout, nvals, cvals, isnull)
ekrcec_c = _pyswice.ekrcec_c

def ekrced_c(handle, segno, recno, column, nvals, dvals, isnull):
    return _pyswice.ekrced_c(handle, segno, recno, column, nvals, dvals, isnull)
ekrced_c = _pyswice.ekrced_c

def ekrcei_c(handle, segno, recno, column, nvals, ivals, isnull):
    return _pyswice.ekrcei_c(handle, segno, recno, column, nvals, ivals, isnull)
ekrcei_c = _pyswice.ekrcei_c

def ekssum_c(handle, segno, segsum):
    return _pyswice.ekssum_c(handle, segno, segsum)
ekssum_c = _pyswice.ekssum_c

def ektnam_c(n, lenout, table):
    return _pyswice.ektnam_c(n, lenout, table)
ektnam_c = _pyswice.ektnam_c

def ekucec_c(handle, segno, recno, column, nvals, vallen, cvals, isnull):
    return _pyswice.ekucec_c(handle, segno, recno, column, nvals, vallen, cvals, isnull)
ekucec_c = _pyswice.ekucec_c

def ekuef_c(handle):
    return _pyswice.ekuef_c(handle)
ekuef_c = _pyswice.ekuef_c

def elemc_c(item, set):
    return _pyswice.elemc_c(item, set)
elemc_c = _pyswice.elemc_c

def elemd_c(item, set):
    return _pyswice.elemd_c(item, set)
elemd_c = _pyswice.elemd_c

def elemi_c(item, set):
    return _pyswice.elemi_c(item, set)
elemi_c = _pyswice.elemi_c

def eqncpv_c(et, epoch, eqel, rapol, decpol, state):
    return _pyswice.eqncpv_c(et, epoch, eqel, rapol, decpol, state)
eqncpv_c = _pyswice.eqncpv_c

def eqstr_c(a, b):
    return _pyswice.eqstr_c(a, b)
eqstr_c = _pyswice.eqstr_c

def el2cgv_c(ellipse, center, smajor, sminor):
    return _pyswice.el2cgv_c(ellipse, center, smajor, sminor)
el2cgv_c = _pyswice.el2cgv_c

def erract_c(operation, lenout, action):
    return _pyswice.erract_c(operation, lenout, action)
erract_c = _pyswice.erract_c

def errch_c(marker, string):
    return _pyswice.errch_c(marker, string)
errch_c = _pyswice.errch_c

def errdev_c(operation, lenout, device):
    return _pyswice.errdev_c(operation, lenout, device)
errdev_c = _pyswice.errdev_c

def errdp_c(marker, number):
    return _pyswice.errdp_c(marker, number)
errdp_c = _pyswice.errdp_c

def errint_c(marker, number):
    return _pyswice.errint_c(marker, number)
errint_c = _pyswice.errint_c

def errprt_c(operation, lenout, list):
    return _pyswice.errprt_c(operation, lenout, list)
errprt_c = _pyswice.errprt_c

def esrchc_c(value, ndim, lenvals, array):
    return _pyswice.esrchc_c(value, ndim, lenvals, array)
esrchc_c = _pyswice.esrchc_c

def etcal_c(et, lenout, string):
    return _pyswice.etcal_c(et, lenout, string)
etcal_c = _pyswice.etcal_c

def et2lst_c(et, body, lon, type, timlen, ampmlen, hr, mn, sc, time, ampm):
    return _pyswice.et2lst_c(et, body, lon, type, timlen, ampmlen, hr, mn, sc, time, ampm)
et2lst_c = _pyswice.et2lst_c

def et2utc_c(et, format, prec, lenout, utcstr):
    return _pyswice.et2utc_c(et, format, prec, lenout, utcstr)
et2utc_c = _pyswice.et2utc_c

def eul2m_c(angle3, angle2, angle1, axis3, axis2, axis1, r):
    return _pyswice.eul2m_c(angle3, angle2, angle1, axis3, axis2, axis1, r)
eul2m_c = _pyswice.eul2m_c

def eul2xf_c(eulang, axisa, axisb, axisc, xform):
    return _pyswice.eul2xf_c(eulang, axisa, axisb, axisc, xform)
eul2xf_c = _pyswice.eul2xf_c

def exists_c(name):
    return _pyswice.exists_c(name)
exists_c = _pyswice.exists_c

def expool_c(name, found):
    return _pyswice.expool_c(name, found)
expool_c = _pyswice.expool_c

def failed_c():
    return _pyswice.failed_c()
failed_c = _pyswice.failed_c

def fovray_c(inst, raydir, rframe, abcorr, obsrvr, et, visible):
    return _pyswice.fovray_c(inst, raydir, rframe, abcorr, obsrvr, et, visible)
fovray_c = _pyswice.fovray_c

def fovtrg_c(inst, target, tshape, tframe, abcorr, obsrvr, et, visible):
    return _pyswice.fovtrg_c(inst, target, tshape, tframe, abcorr, obsrvr, et, visible)
fovtrg_c = _pyswice.fovtrg_c

def frame_c(x, y, z):
    return _pyswice.frame_c(x, y, z)
frame_c = _pyswice.frame_c

def frinfo_c(frcode, cent, clss, clssid, found):
    return _pyswice.frinfo_c(frcode, cent, clss, clssid, found)
frinfo_c = _pyswice.frinfo_c

def frmnam_c(frcode, lenout, frname):
    return _pyswice.frmnam_c(frcode, lenout, frname)
frmnam_c = _pyswice.frmnam_c

def ftncls_c(unit):
    return _pyswice.ftncls_c(unit)
ftncls_c = _pyswice.ftncls_c

def furnsh_c(file):
    return _pyswice.furnsh_c(file)
furnsh_c = _pyswice.furnsh_c

def gcpool_c(name, start, room, lenout, n, cvals, found):
    return _pyswice.gcpool_c(name, start, room, lenout, n, cvals, found)
gcpool_c = _pyswice.gcpool_c

def gdpool_c(name, start, room, n, values, found):
    return _pyswice.gdpool_c(name, start, room, n, values, found)
gdpool_c = _pyswice.gdpool_c

def georec_c(lon, lat, alt, re, f, rectan):
    return _pyswice.georec_c(lon, lat, alt, re, f, rectan)
georec_c = _pyswice.georec_c

def getcml_c(argc, argv):
    return _pyswice.getcml_c(argc, argv)
getcml_c = _pyswice.getcml_c

def getelm_c(frstyr, lineln, lines, epoch, elems):
    return _pyswice.getelm_c(frstyr, lineln, lines, epoch, elems)
getelm_c = _pyswice.getelm_c

def getfat_c(file, arclen, typlen, arch, type):
    return _pyswice.getfat_c(file, arclen, typlen, arch, type)
getfat_c = _pyswice.getfat_c

def getfov_c(instid, room, shapelen, framelen, shape, frame, bsight, n, bounds):
    return _pyswice.getfov_c(instid, room, shapelen, framelen, shape, frame, bsight, n, bounds)
getfov_c = _pyswice.getfov_c

def getmsg_c(option, lenout, msg):
    return _pyswice.getmsg_c(option, lenout, msg)
getmsg_c = _pyswice.getmsg_c

def gfbail_c():
    return _pyswice.gfbail_c()
gfbail_c = _pyswice.gfbail_c

def gfclrh_c():
    return _pyswice.gfclrh_c()
gfclrh_c = _pyswice.gfclrh_c

def gfdist_c(target, abcorr, obsrvr, relate, refval, adjust, step, nintvls, cnfine, result):
    return _pyswice.gfdist_c(target, abcorr, obsrvr, relate, refval, adjust, step, nintvls, cnfine, result)
gfdist_c = _pyswice.gfdist_c

def gfevnt_c(udstep, udrefn, gquant, qnpars, lenvals, qpnams, qcpars, qdpars, qipars, qlpars, op, refval, tol, adjust, rpt, udrepi, udrepu, udrepf, nintvls, bail, udbail, cnfine, result):
    return _pyswice.gfevnt_c(udstep, udrefn, gquant, qnpars, lenvals, qpnams, qcpars, qdpars, qipars, qlpars, op, refval, tol, adjust, rpt, udrepi, udrepu, udrepf, nintvls, bail, udbail, cnfine, result)
gfevnt_c = _pyswice.gfevnt_c

def gffove_c(inst, tshape, raydir, target, tframe, abcorr, obsrvr, tol, udstep, udrefn, rpt, udrepi, udrepu, udrepf, bail, udbail, cnfine, result):
    return _pyswice.gffove_c(inst, tshape, raydir, target, tframe, abcorr, obsrvr, tol, udstep, udrefn, rpt, udrepi, udrepu, udrepf, bail, udbail, cnfine, result)
gffove_c = _pyswice.gffove_c

def gfilum_c(method, angtyp, target, illum, fixref, abcorr, obsrvr, spoint, relate, refval, adjust, step, nintvls, cnfine, result):
    return _pyswice.gfilum_c(method, angtyp, target, illum, fixref, abcorr, obsrvr, spoint, relate, refval, adjust, step, nintvls, cnfine, result)
gfilum_c = _pyswice.gfilum_c

def gfinth_c(sigcode):
    return _pyswice.gfinth_c(sigcode)
gfinth_c = _pyswice.gfinth_c

def gfocce_c(occtyp, front, fshape, fframe, back, bshape, bframe, obsrvr, abcorr, tol, udstep, udrefn, rpt, udrepi, udrepu, udrepf, bail, udbail, cnfine, result):
    return _pyswice.gfocce_c(occtyp, front, fshape, fframe, back, bshape, bframe, obsrvr, abcorr, tol, udstep, udrefn, rpt, udrepi, udrepu, udrepf, bail, udbail, cnfine, result)
gfocce_c = _pyswice.gfocce_c

def gfoclt_c(occtyp, front, fshape, fframe, back, bshape, bframe, obsrvr, abcorr, step, cnfine, result):
    return _pyswice.gfoclt_c(occtyp, front, fshape, fframe, back, bshape, bframe, obsrvr, abcorr, step, cnfine, result)
gfoclt_c = _pyswice.gfoclt_c

def gfpa_c(target, illum, abcorr, obsrvr, relate, refval, adjust, step, nintvls, cnfine, result):
    return _pyswice.gfpa_c(target, illum, abcorr, obsrvr, relate, refval, adjust, step, nintvls, cnfine, result)
gfpa_c = _pyswice.gfpa_c

def gfposc_c(target, frame, abcorr, obsrvr, crdsys, coord, relate, refval, adjust, step, nintvls, cnfine, result):
    return _pyswice.gfposc_c(target, frame, abcorr, obsrvr, crdsys, coord, relate, refval, adjust, step, nintvls, cnfine, result)
gfposc_c = _pyswice.gfposc_c

def gfrefn_c(t1, t2, s1, s2, t):
    return _pyswice.gfrefn_c(t1, t2, s1, s2, t)
gfrefn_c = _pyswice.gfrefn_c

def gfrepf_c():
    return _pyswice.gfrepf_c()
gfrepf_c = _pyswice.gfrepf_c

def gfrepi_c(window, begmss, endmss):
    return _pyswice.gfrepi_c(window, begmss, endmss)
gfrepi_c = _pyswice.gfrepi_c

def gfrepu_c(ivbeg, ivend, time):
    return _pyswice.gfrepu_c(ivbeg, ivend, time)
gfrepu_c = _pyswice.gfrepu_c

def gfrfov_c(inst, raydir, rframe, abcorr, obsrvr, step, cnfine, result):
    return _pyswice.gfrfov_c(inst, raydir, rframe, abcorr, obsrvr, step, cnfine, result)
gfrfov_c = _pyswice.gfrfov_c

def gfrr_c(target, abcorr, obsrvr, relate, refval, adjust, step, nintvls, cnfine, result):
    return _pyswice.gfrr_c(target, abcorr, obsrvr, relate, refval, adjust, step, nintvls, cnfine, result)
gfrr_c = _pyswice.gfrr_c

def gfsep_c(targ1, shape1, frame1, targ2, shape2, frame2, abcorr, obsrvr, relate, refval, adjust, step, nintvls, cnfine, result):
    return _pyswice.gfsep_c(targ1, shape1, frame1, targ2, shape2, frame2, abcorr, obsrvr, relate, refval, adjust, step, nintvls, cnfine, result)
gfsep_c = _pyswice.gfsep_c

def gfsntc_c(target, fixref, method, abcorr, obsrvr, dref, dvec, crdsys, coord, relate, refval, adjust, step, nintvls, cnfine, result):
    return _pyswice.gfsntc_c(target, fixref, method, abcorr, obsrvr, dref, dvec, crdsys, coord, relate, refval, adjust, step, nintvls, cnfine, result)
gfsntc_c = _pyswice.gfsntc_c

def gfsstp_c(step):
    return _pyswice.gfsstp_c(step)
gfsstp_c = _pyswice.gfsstp_c

def gfstep_c(time, step):
    return _pyswice.gfstep_c(time, step)
gfstep_c = _pyswice.gfstep_c

def gfstol_c(value):
    return _pyswice.gfstol_c(value)
gfstol_c = _pyswice.gfstol_c

def gfsubc_c(target, fixref, method, abcorr, obsrvr, crdsys, coord, relate, refval, adjust, step, nintvls, cnfine, result):
    return _pyswice.gfsubc_c(target, fixref, method, abcorr, obsrvr, crdsys, coord, relate, refval, adjust, step, nintvls, cnfine, result)
gfsubc_c = _pyswice.gfsubc_c

def gftfov_c(inst, target, tshape, tframe, abcorr, obsrvr, step, cnfine, result):
    return _pyswice.gftfov_c(inst, target, tshape, tframe, abcorr, obsrvr, step, cnfine, result)
gftfov_c = _pyswice.gftfov_c

def gfudb_c(udfuns, udfunb, step, cnfine, result):
    return _pyswice.gfudb_c(udfuns, udfunb, step, cnfine, result)
gfudb_c = _pyswice.gfudb_c

def gfuds_c(udfuns, udfunb, relate, refval, adjust, step, nintvls, cnfine, result):
    return _pyswice.gfuds_c(udfuns, udfunb, relate, refval, adjust, step, nintvls, cnfine, result)
gfuds_c = _pyswice.gfuds_c

def gipool_c(name, start, room, n, ivals, found):
    return _pyswice.gipool_c(name, start, room, n, ivals, found)
gipool_c = _pyswice.gipool_c

def gnpool_c(name, start, room, lenout, n, kvars, found):
    return _pyswice.gnpool_c(name, start, room, lenout, n, kvars, found)
gnpool_c = _pyswice.gnpool_c

def halfpi_c():
    return _pyswice.halfpi_c()
halfpi_c = _pyswice.halfpi_c

def hx2dp_c(string, lenout, number, error, errmsg):
    return _pyswice.hx2dp_c(string, lenout, number, error, errmsg)
hx2dp_c = _pyswice.hx2dp_c

def ident_c(matrix):
    return _pyswice.ident_c(matrix)
ident_c = _pyswice.ident_c

def ilumin_c(method, target, et, fixref, abcorr, obsrvr, spoint, trgepc, srfvec, phase, solar, emissn):
    return _pyswice.ilumin_c(method, target, et, fixref, abcorr, obsrvr, spoint, trgepc, srfvec, phase, solar, emissn)
ilumin_c = _pyswice.ilumin_c

def illum_c(target, et, abcorr, obsrvr, spoint, phase, solar, emissn):
    return _pyswice.illum_c(target, et, abcorr, obsrvr, spoint, phase, solar, emissn)
illum_c = _pyswice.illum_c

def inedpl_c(a, b, c, plane, ellipse, found):
    return _pyswice.inedpl_c(a, b, c, plane, ellipse, found)
inedpl_c = _pyswice.inedpl_c

def inelpl_c(ellips, plane, nxpts, xpt1, xpt2):
    return _pyswice.inelpl_c(ellips, plane, nxpts, xpt1, xpt2)
inelpl_c = _pyswice.inelpl_c

def insrtc_c(item, set):
    return _pyswice.insrtc_c(item, set)
insrtc_c = _pyswice.insrtc_c

def insrtd_c(item, set):
    return _pyswice.insrtd_c(item, set)
insrtd_c = _pyswice.insrtd_c

def insrti_c(item, set):
    return _pyswice.insrti_c(item, set)
insrti_c = _pyswice.insrti_c

def inter_c(a, b, c):
    return _pyswice.inter_c(a, b, c)
inter_c = _pyswice.inter_c

def inrypl_c(vertex, dir, plane, nxpts, xpt):
    return _pyswice.inrypl_c(vertex, dir, plane, nxpts, xpt)
inrypl_c = _pyswice.inrypl_c

def intmax_c():
    return _pyswice.intmax_c()
intmax_c = _pyswice.intmax_c

def intmax_():
    return _pyswice.intmax_()
intmax_ = _pyswice.intmax_

def intmin_c():
    return _pyswice.intmin_c()
intmin_c = _pyswice.intmin_c

def intmin_():
    return _pyswice.intmin_()
intmin_ = _pyswice.intmin_

def invert_c(m1, m2):
    return _pyswice.invert_c(m1, m2)
invert_c = _pyswice.invert_c

def invort_c(m, mit):
    return _pyswice.invort_c(m, mit)
invort_c = _pyswice.invort_c

def isordv_c(array, n):
    return _pyswice.isordv_c(array, n)
isordv_c = _pyswice.isordv_c

def isrot_c(m, ntol, dtol):
    return _pyswice.isrot_c(m, ntol, dtol)
isrot_c = _pyswice.isrot_c

def isrchc_c(value, ndim, lenvals, array):
    return _pyswice.isrchc_c(value, ndim, lenvals, array)
isrchc_c = _pyswice.isrchc_c

def isrchd_c(value, ndim, array):
    return _pyswice.isrchd_c(value, ndim, array)
isrchd_c = _pyswice.isrchd_c

def isrchi_c(value, ndim, array):
    return _pyswice.isrchi_c(value, ndim, array)
isrchi_c = _pyswice.isrchi_c

def iswhsp_c(string):
    return _pyswice.iswhsp_c(string)
iswhsp_c = _pyswice.iswhsp_c

def j1900_c():
    return _pyswice.j1900_c()
j1900_c = _pyswice.j1900_c

def j1950_c():
    return _pyswice.j1950_c()
j1950_c = _pyswice.j1950_c

def j2000_c():
    return _pyswice.j2000_c()
j2000_c = _pyswice.j2000_c

def j2100_c():
    return _pyswice.j2100_c()
j2100_c = _pyswice.j2100_c

def jyear_c():
    return _pyswice.jyear_c()
jyear_c = _pyswice.jyear_c

def kclear_c():
    return _pyswice.kclear_c()
kclear_c = _pyswice.kclear_c

def kdata_c(which, kind, fillen, typlen, srclen, file, filtyp, source, handle, found):
    return _pyswice.kdata_c(which, kind, fillen, typlen, srclen, file, filtyp, source, handle, found)
kdata_c = _pyswice.kdata_c

def kinfo_c(file, typlen, srclen, filtyp, source, handle, found):
    return _pyswice.kinfo_c(file, typlen, srclen, filtyp, source, handle, found)
kinfo_c = _pyswice.kinfo_c

def kplfrm_c(frmcls, idset):
    return _pyswice.kplfrm_c(frmcls, idset)
kplfrm_c = _pyswice.kplfrm_c

def ktotal_c(kind, count):
    return _pyswice.ktotal_c(kind, count)
ktotal_c = _pyswice.ktotal_c

def kxtrct_c(keywd, termlen, terms, nterms, stringlen, substrlen, string, found, substr):
    return _pyswice.kxtrct_c(keywd, termlen, terms, nterms, stringlen, substrlen, string, found, substr)
kxtrct_c = _pyswice.kxtrct_c

def lastnb_c(string):
    return _pyswice.lastnb_c(string)
lastnb_c = _pyswice.lastnb_c

def latcyl_c(radius, lon, lat, r, lonc, z):
    return _pyswice.latcyl_c(radius, lon, lat, r, lonc, z)
latcyl_c = _pyswice.latcyl_c

def latrec_c(radius, longitude, latitude, rectan):
    return _pyswice.latrec_c(radius, longitude, latitude, rectan)
latrec_c = _pyswice.latrec_c

def latsph_c(radius, lon, lat, rho, colat, lons):
    return _pyswice.latsph_c(radius, lon, lat, rho, colat, lons)
latsph_c = _pyswice.latsph_c

def lcase_c(arg1, lenout, out):
    return _pyswice.lcase_c(arg1, lenout, out)
lcase_c = _pyswice.lcase_c

def ldpool_c(filename):
    return _pyswice.ldpool_c(filename)
ldpool_c = _pyswice.ldpool_c

def lmpool_c(cvals, lenvals, n):
    return _pyswice.lmpool_c(cvals, lenvals, n)
lmpool_c = _pyswice.lmpool_c

def lparse_c(list, delim, nmax, lenout, n, items):
    return _pyswice.lparse_c(list, delim, nmax, lenout, n, items)
lparse_c = _pyswice.lparse_c

def lparsm_c(list, delims, nmax, lenout, n, items):
    return _pyswice.lparsm_c(list, delims, nmax, lenout, n, items)
lparsm_c = _pyswice.lparsm_c

def lparss_c(list, delims, set):
    return _pyswice.lparss_c(list, delims, set)
lparss_c = _pyswice.lparss_c

def lspcn_c(body, et, abcorr):
    return _pyswice.lspcn_c(body, et, abcorr)
lspcn_c = _pyswice.lspcn_c

def lstlec_c(string, n, lenvals, array):
    return _pyswice.lstlec_c(string, n, lenvals, array)
lstlec_c = _pyswice.lstlec_c

def lstled_c(x, n, array):
    return _pyswice.lstled_c(x, n, array)
lstled_c = _pyswice.lstled_c

def lstlei_c(x, n, array):
    return _pyswice.lstlei_c(x, n, array)
lstlei_c = _pyswice.lstlei_c

def lstltc_c(string, n, lenvals, array):
    return _pyswice.lstltc_c(string, n, lenvals, array)
lstltc_c = _pyswice.lstltc_c

def lstltd_c(x, n, array):
    return _pyswice.lstltd_c(x, n, array)
lstltd_c = _pyswice.lstltd_c

def lstlti_c(x, n, array):
    return _pyswice.lstlti_c(x, n, array)
lstlti_c = _pyswice.lstlti_c

def ltime_c(etobs, obs, dir, targ, ettarg, elapsd):
    return _pyswice.ltime_c(etobs, obs, dir, targ, ettarg, elapsd)
ltime_c = _pyswice.ltime_c

def lx4dec_c(string, first, last, nchar):
    return _pyswice.lx4dec_c(string, first, last, nchar)
lx4dec_c = _pyswice.lx4dec_c

def lx4num_c(string, first, last, nchar):
    return _pyswice.lx4num_c(string, first, last, nchar)
lx4num_c = _pyswice.lx4num_c

def lx4sgn_c(string, first, last, nchar):
    return _pyswice.lx4sgn_c(string, first, last, nchar)
lx4sgn_c = _pyswice.lx4sgn_c

def lx4uns_c(string, first, last, nchar):
    return _pyswice.lx4uns_c(string, first, last, nchar)
lx4uns_c = _pyswice.lx4uns_c

def lxqstr_c(string, qchar, first, last, nchar):
    return _pyswice.lxqstr_c(string, qchar, first, last, nchar)
lxqstr_c = _pyswice.lxqstr_c

def m2eul_c(r, axis3, axis2, axis1, angle3, angle2, angle1):
    return _pyswice.m2eul_c(r, axis3, axis2, axis1, angle3, angle2, angle1)
m2eul_c = _pyswice.m2eul_c

def m2q_c(r, q):
    return _pyswice.m2q_c(r, q)
m2q_c = _pyswice.m2q_c

def matchi_c(string, templ, wstr, wchr):
    return _pyswice.matchi_c(string, templ, wstr, wchr)
matchi_c = _pyswice.matchi_c

def matchw_c(string, templ, wstr, wchr):
    return _pyswice.matchw_c(string, templ, wstr, wchr)
matchw_c = _pyswice.matchw_c

def maxd_c(n):
    return _pyswice.maxd_c(n)
maxd_c = _pyswice.maxd_c

def maxi_c(n):
    return _pyswice.maxi_c(n)
maxi_c = _pyswice.maxi_c

def mequ_c(m1, mout):
    return _pyswice.mequ_c(m1, mout)
mequ_c = _pyswice.mequ_c

def mequg_c(m1, nr, nc, mout):
    return _pyswice.mequg_c(m1, nr, nc, mout)
mequg_c = _pyswice.mequg_c

def mind_c(n):
    return _pyswice.mind_c(n)
mind_c = _pyswice.mind_c

def mini_c(n):
    return _pyswice.mini_c(n)
mini_c = _pyswice.mini_c

def moved_(arrfrm, ndim, arrto):
    return _pyswice.moved_(arrfrm, ndim, arrto)
moved_ = _pyswice.moved_

def mtxm_c(m1, m2, mout):
    return _pyswice.mtxm_c(m1, m2, mout)
mtxm_c = _pyswice.mtxm_c

def mtxmg_c(m1, m2, row1, col1, col2, mout):
    return _pyswice.mtxmg_c(m1, m2, row1, col1, col2, mout)
mtxmg_c = _pyswice.mtxmg_c

def mtxv_c(m1, vin, vout):
    return _pyswice.mtxv_c(m1, vin, vout)
mtxv_c = _pyswice.mtxv_c

def mtxvg_c(m1, v2, ncol1, nr1r2, vout):
    return _pyswice.mtxvg_c(m1, v2, ncol1, nr1r2, vout)
mtxvg_c = _pyswice.mtxvg_c

def mxm_c(m1, m2, mout):
    return _pyswice.mxm_c(m1, m2, mout)
mxm_c = _pyswice.mxm_c

def mxmg_c(m1, m2, row1, col1, col2, mout):
    return _pyswice.mxmg_c(m1, m2, row1, col1, col2, mout)
mxmg_c = _pyswice.mxmg_c

def mxmt_c(m1, m2, mout):
    return _pyswice.mxmt_c(m1, m2, mout)
mxmt_c = _pyswice.mxmt_c

def mxmtg_c(m1, m2, nrow1, nc1c2, nrow2, mout):
    return _pyswice.mxmtg_c(m1, m2, nrow1, nc1c2, nrow2, mout)
mxmtg_c = _pyswice.mxmtg_c

def mxv_c(m1, vin, vout):
    return _pyswice.mxv_c(m1, vin, vout)
mxv_c = _pyswice.mxv_c

def mxvg_c(m1, v2, nrow1, nc1r2, vout):
    return _pyswice.mxvg_c(m1, v2, nrow1, nc1r2, vout)
mxvg_c = _pyswice.mxvg_c

def namfrm_c(frname, frcode):
    return _pyswice.namfrm_c(frname, frcode)
namfrm_c = _pyswice.namfrm_c

def ncpos_c(str, chars, start):
    return _pyswice.ncpos_c(str, chars, start)
ncpos_c = _pyswice.ncpos_c

def ncposr_c(str, chars, start):
    return _pyswice.ncposr_c(str, chars, start)
ncposr_c = _pyswice.ncposr_c

def nearpt_c(positn, a, b, c, npoint, alt):
    return _pyswice.nearpt_c(positn, a, b, c, npoint, alt)
nearpt_c = _pyswice.nearpt_c

def npedln_c(a, b, c, linept, linedr, pnear, dist):
    return _pyswice.npedln_c(a, b, c, linept, linedr, pnear, dist)
npedln_c = _pyswice.npedln_c

def npelpt_c(point, ellips, pnear, dist):
    return _pyswice.npelpt_c(point, ellips, pnear, dist)
npelpt_c = _pyswice.npelpt_c

def nplnpt_c(linpt, lindir, point, pnear, dist):
    return _pyswice.nplnpt_c(linpt, lindir, point, pnear, dist)
nplnpt_c = _pyswice.nplnpt_c

def nvc2pl_c(normal, constant, plane):
    return _pyswice.nvc2pl_c(normal, constant, plane)
nvc2pl_c = _pyswice.nvc2pl_c

def nvp2pl_c(normal, point, plane):
    return _pyswice.nvp2pl_c(normal, point, plane)
nvp2pl_c = _pyswice.nvp2pl_c

def occult_c(target1, shape1, frame1, target2, shape2, frame2, abcorr, observer, time, occult_code):
    return _pyswice.occult_c(target1, shape1, frame1, target2, shape2, frame2, abcorr, observer, time, occult_code)
occult_c = _pyswice.occult_c

def ordc_c(item, set):
    return _pyswice.ordc_c(item, set)
ordc_c = _pyswice.ordc_c

def ordd_c(item, set):
    return _pyswice.ordd_c(item, set)
ordd_c = _pyswice.ordd_c

def ordi_c(item, set):
    return _pyswice.ordi_c(item, set)
ordi_c = _pyswice.ordi_c

def orderc_c(lenvals, array, ndim, iorder):
    return _pyswice.orderc_c(lenvals, array, ndim, iorder)
orderc_c = _pyswice.orderc_c

def orderd_c(array, ndim, iorder):
    return _pyswice.orderd_c(array, ndim, iorder)
orderd_c = _pyswice.orderd_c

def orderi_c(array, ndim, iorder):
    return _pyswice.orderi_c(array, ndim, iorder)
orderi_c = _pyswice.orderi_c

def oscelt_c(state, et, mu, elts):
    return _pyswice.oscelt_c(state, et, mu, elts)
oscelt_c = _pyswice.oscelt_c

def pckcov_c(pck, idcode, cover):
    return _pyswice.pckcov_c(pck, idcode, cover)
pckcov_c = _pyswice.pckcov_c

def pckfrm_c(pck, ids):
    return _pyswice.pckfrm_c(pck, ids)
pckfrm_c = _pyswice.pckfrm_c

def pcklof_c(fname, handle):
    return _pyswice.pcklof_c(fname, handle)
pcklof_c = _pyswice.pcklof_c

def pckuof_c(handle):
    return _pyswice.pckuof_c(handle)
pckuof_c = _pyswice.pckuof_c

def pcpool_c(name, n, lenvals, cvals):
    return _pyswice.pcpool_c(name, n, lenvals, cvals)
pcpool_c = _pyswice.pcpool_c

def pdpool_c(name, n, dvals):
    return _pyswice.pdpool_c(name, n, dvals)
pdpool_c = _pyswice.pdpool_c

def pgrrec_c(body, lon, lat, alt, re, f, rectan):
    return _pyswice.pgrrec_c(body, lon, lat, alt, re, f, rectan)
pgrrec_c = _pyswice.pgrrec_c

def phaseq_c(et, target, illumn, obsrvr, abcorr):
    return _pyswice.phaseq_c(et, target, illumn, obsrvr, abcorr)
phaseq_c = _pyswice.phaseq_c

def pi_c():
    return _pyswice.pi_c()
pi_c = _pyswice.pi_c

def pipool_c(name, n, ivals):
    return _pyswice.pipool_c(name, n, ivals)
pipool_c = _pyswice.pipool_c

def pjelpl_c(elin, plane, elout):
    return _pyswice.pjelpl_c(elin, plane, elout)
pjelpl_c = _pyswice.pjelpl_c

def pl2nvc_c(plane, normal, constant):
    return _pyswice.pl2nvc_c(plane, normal, constant)
pl2nvc_c = _pyswice.pl2nvc_c

def pl2nvp_c(plane, normal, point):
    return _pyswice.pl2nvp_c(plane, normal, point)
pl2nvp_c = _pyswice.pl2nvp_c

def pl2psv_c(plane, point, span1, span2):
    return _pyswice.pl2psv_c(plane, point, span1, span2)
pl2psv_c = _pyswice.pl2psv_c

def pos_c(str, substr, start):
    return _pyswice.pos_c(str, substr, start)
pos_c = _pyswice.pos_c

def posr_c(str, substr, start):
    return _pyswice.posr_c(str, substr, start)
posr_c = _pyswice.posr_c

def prompt_c(prmptStr, lenout, buffer):
    return _pyswice.prompt_c(prmptStr, lenout, buffer)
prompt_c = _pyswice.prompt_c

def prop2b_c(gm, pvinit, dt, pvprop):
    return _pyswice.prop2b_c(gm, pvinit, dt, pvprop)
prop2b_c = _pyswice.prop2b_c

def prsdp_c(string, dpval):
    return _pyswice.prsdp_c(string, dpval)
prsdp_c = _pyswice.prsdp_c

def prsint_c(string, intval):
    return _pyswice.prsint_c(string, intval)
prsint_c = _pyswice.prsint_c

def psv2pl_c(point, span1, span2, plane):
    return _pyswice.psv2pl_c(point, span1, span2, plane)
psv2pl_c = _pyswice.psv2pl_c

def putcml_c(argc, argv):
    return _pyswice.putcml_c(argc, argv)
putcml_c = _pyswice.putcml_c

def pxform_c(arg1, to, et, rotate):
    return _pyswice.pxform_c(arg1, to, et, rotate)
pxform_c = _pyswice.pxform_c

def pxfrm2_c(arg1, to, etfrom, etto, rotate):
    return _pyswice.pxfrm2_c(arg1, to, etfrom, etto, rotate)
pxfrm2_c = _pyswice.pxfrm2_c

def q2m_c(q, r):
    return _pyswice.q2m_c(q, r)
q2m_c = _pyswice.q2m_c

def qcktrc_c(tracelen, trace):
    return _pyswice.qcktrc_c(tracelen, trace)
qcktrc_c = _pyswice.qcktrc_c

def qdq2av_c(q, dq, av):
    return _pyswice.qdq2av_c(q, dq, av)
qdq2av_c = _pyswice.qdq2av_c

def qxq_c(q1, q2, qout):
    return _pyswice.qxq_c(q1, q2, qout)
qxq_c = _pyswice.qxq_c

def radrec_c(range, ra, dec, rectan):
    return _pyswice.radrec_c(range, ra, dec, rectan)
radrec_c = _pyswice.radrec_c

def rav2xf_c(rot, av, xform):
    return _pyswice.rav2xf_c(rot, av, xform)
rav2xf_c = _pyswice.rav2xf_c

def raxisa_c(matrix, axis, angle):
    return _pyswice.raxisa_c(matrix, axis, angle)
raxisa_c = _pyswice.raxisa_c

def rdtext_c(file, lenout, line, eof):
    return _pyswice.rdtext_c(file, lenout, line, eof)
rdtext_c = _pyswice.rdtext_c

def reccyl_c(rectan, r, lon, z):
    return _pyswice.reccyl_c(rectan, r, lon, z)
reccyl_c = _pyswice.reccyl_c

def recgeo_c(rectan, re, f, lon, lat, alt):
    return _pyswice.recgeo_c(rectan, re, f, lon, lat, alt)
recgeo_c = _pyswice.recgeo_c

def reclat_c(rectan, radius, longitude, latitude):
    return _pyswice.reclat_c(rectan, radius, longitude, latitude)
reclat_c = _pyswice.reclat_c

def recpgr_c(body, rectan, re, f, lon, lat, alt):
    return _pyswice.recpgr_c(body, rectan, re, f, lon, lat, alt)
recpgr_c = _pyswice.recpgr_c

def recrad_c(rectan, radius, ra, dec):
    return _pyswice.recrad_c(rectan, radius, ra, dec)
recrad_c = _pyswice.recrad_c

def reordc_c(iorder, ndim, lenvals, array):
    return _pyswice.reordc_c(iorder, ndim, lenvals, array)
reordc_c = _pyswice.reordc_c

def reordd_c(iorder, ndim, array):
    return _pyswice.reordd_c(iorder, ndim, array)
reordd_c = _pyswice.reordd_c

def reordi_c(iorder, ndim, array):
    return _pyswice.reordi_c(iorder, ndim, array)
reordi_c = _pyswice.reordi_c

def reordl_c(iorder, ndim, array):
    return _pyswice.reordl_c(iorder, ndim, array)
reordl_c = _pyswice.reordl_c

def removc_c(item, set):
    return _pyswice.removc_c(item, set)
removc_c = _pyswice.removc_c

def removd_c(item, set):
    return _pyswice.removd_c(item, set)
removd_c = _pyswice.removd_c

def removi_c(item, set):
    return _pyswice.removi_c(item, set)
removi_c = _pyswice.removi_c

def repmc_c(arg1, marker, value, lenout, out):
    return _pyswice.repmc_c(arg1, marker, value, lenout, out)
repmc_c = _pyswice.repmc_c

def repmct_c(arg1, marker, value, strCase, lenout, out):
    return _pyswice.repmct_c(arg1, marker, value, strCase, lenout, out)
repmct_c = _pyswice.repmct_c

def repmd_c(arg1, marker, value, sigdig, lenout, out):
    return _pyswice.repmd_c(arg1, marker, value, sigdig, lenout, out)
repmd_c = _pyswice.repmd_c

def repmf_c(arg1, marker, value, sigdig, format, lenout, out):
    return _pyswice.repmf_c(arg1, marker, value, sigdig, format, lenout, out)
repmf_c = _pyswice.repmf_c

def repmi_c(arg1, marker, value, lenout, out):
    return _pyswice.repmi_c(arg1, marker, value, lenout, out)
repmi_c = _pyswice.repmi_c

def repmot_c(arg1, marker, value, strCase, lenout, out):
    return _pyswice.repmot_c(arg1, marker, value, strCase, lenout, out)
repmot_c = _pyswice.repmot_c

def reset_c():
    return _pyswice.reset_c()
reset_c = _pyswice.reset_c

def return_c():
    return _pyswice.return_c()
return_c = _pyswice.return_c

def recsph_c(rectan, r, colat, lon):
    return _pyswice.recsph_c(rectan, r, colat, lon)
recsph_c = _pyswice.recsph_c

def rotate_c(angle, iaxis, mout):
    return _pyswice.rotate_c(angle, iaxis, mout)
rotate_c = _pyswice.rotate_c

def rotmat_c(m1, angle, iaxis, mout):
    return _pyswice.rotmat_c(m1, angle, iaxis, mout)
rotmat_c = _pyswice.rotmat_c

def rotvec_c(v1, angle, iaxis, vout):
    return _pyswice.rotvec_c(v1, angle, iaxis, vout)
rotvec_c = _pyswice.rotvec_c

def rpd_c():
    return _pyswice.rpd_c()
rpd_c = _pyswice.rpd_c

def rquad_c(a, b, c, root1, root2):
    return _pyswice.rquad_c(a, b, c, root1, root2)
rquad_c = _pyswice.rquad_c

def saelgv_c(vec1, vec2, smajor, sminor):
    return _pyswice.saelgv_c(vec1, vec2, smajor, sminor)
saelgv_c = _pyswice.saelgv_c

def scard_c(card, cell):
    return _pyswice.scard_c(card, cell)
scard_c = _pyswice.scard_c

def scdecd_c(sc, sclkdp, sclklen, sclkch):
    return _pyswice.scdecd_c(sc, sclkdp, sclklen, sclkch)
scdecd_c = _pyswice.scdecd_c

def sce2s_c(sc, et, sclklen, sclkch):
    return _pyswice.sce2s_c(sc, et, sclklen, sclkch)
sce2s_c = _pyswice.sce2s_c

def sce2c_c(sc, et, sclkdp):
    return _pyswice.sce2c_c(sc, et, sclkdp)
sce2c_c = _pyswice.sce2c_c

def sce2t_c(sc, et, sclkdp):
    return _pyswice.sce2t_c(sc, et, sclkdp)
sce2t_c = _pyswice.sce2t_c

def scencd_c(sc, sclkch, sclkdp):
    return _pyswice.scencd_c(sc, sclkch, sclkdp)
scencd_c = _pyswice.scencd_c

def scfmt_c(sc, ticks, clkstrlen, clkstr):
    return _pyswice.scfmt_c(sc, ticks, clkstrlen, clkstr)
scfmt_c = _pyswice.scfmt_c

def scpart_c(sc, nparts, pstart, pstop):
    return _pyswice.scpart_c(sc, nparts, pstart, pstop)
scpart_c = _pyswice.scpart_c

def scs2e_c(sc, sclkch, et):
    return _pyswice.scs2e_c(sc, sclkch, et)
scs2e_c = _pyswice.scs2e_c

def sct2e_c(sc, sclkdp, et):
    return _pyswice.sct2e_c(sc, sclkdp, et)
sct2e_c = _pyswice.sct2e_c

def sctiks_c(sc, clkstr, ticks):
    return _pyswice.sctiks_c(sc, clkstr, ticks)
sctiks_c = _pyswice.sctiks_c

def sdiff_c(a, b, c):
    return _pyswice.sdiff_c(a, b, c)
sdiff_c = _pyswice.sdiff_c

def set_c(a, op, b):
    return _pyswice.set_c(a, op, b)
set_c = _pyswice.set_c

def setmsg_c(msg):
    return _pyswice.setmsg_c(msg)
setmsg_c = _pyswice.setmsg_c

def shellc_c(ndim, lenvals, array):
    return _pyswice.shellc_c(ndim, lenvals, array)
shellc_c = _pyswice.shellc_c

def shelld_c(ndim, array):
    return _pyswice.shelld_c(ndim, array)
shelld_c = _pyswice.shelld_c

def shelli_c(ndim, array):
    return _pyswice.shelli_c(ndim, array)
shelli_c = _pyswice.shelli_c

def sigerr_c(message):
    return _pyswice.sigerr_c(message)
sigerr_c = _pyswice.sigerr_c

def sincpt_c(method, target, et, fixref, abcorr, obsrvr, dref, dvec, spoint, trgepc, srfvec, found):
    return _pyswice.sincpt_c(method, target, et, fixref, abcorr, obsrvr, dref, dvec, spoint, trgepc, srfvec, found)
sincpt_c = _pyswice.sincpt_c

def size_c(size):
    return _pyswice.size_c(size)
size_c = _pyswice.size_c

def spd_c():
    return _pyswice.spd_c()
spd_c = _pyswice.spd_c

def sphcyl_c(radius, colat, slon, r, lon, z):
    return _pyswice.sphcyl_c(radius, colat, slon, r, lon, z)
sphcyl_c = _pyswice.sphcyl_c

def sphlat_c(r, colat, lons, radius, lon, lat):
    return _pyswice.sphlat_c(r, colat, lons, radius, lon, lat)
sphlat_c = _pyswice.sphlat_c

def sphrec_c(r, colat, lon, rectan):
    return _pyswice.sphrec_c(r, colat, lon, rectan)
sphrec_c = _pyswice.sphrec_c

def spk14a_c(handle, ncsets, coeffs, epochs):
    return _pyswice.spk14a_c(handle, ncsets, coeffs, epochs)
spk14a_c = _pyswice.spk14a_c

def spk14b_c(handle, segid, body, center, frame, first, last, chbdeg):
    return _pyswice.spk14b_c(handle, segid, body, center, frame, first, last, chbdeg)
spk14b_c = _pyswice.spk14b_c

def spk14e_c(handle):
    return _pyswice.spk14e_c(handle)
spk14e_c = _pyswice.spk14e_c

def spkapo_c(targ, et, ref, sobs, abcorr, ptarg, lt):
    return _pyswice.spkapo_c(targ, et, ref, sobs, abcorr, ptarg, lt)
spkapo_c = _pyswice.spkapo_c

def spkapp_c(targ, et, ref, sobs, abcorr, starg, lt):
    return _pyswice.spkapp_c(targ, et, ref, sobs, abcorr, starg, lt)
spkapp_c = _pyswice.spkapp_c

def spkacs_c(targ, et, ref, abcorr, obs, starg, lt, dlt):
    return _pyswice.spkacs_c(targ, et, ref, abcorr, obs, starg, lt, dlt)
spkacs_c = _pyswice.spkacs_c

def spkaps_c(targ, et, ref, abcorr, stobs, accobs, starg, lt, dlt):
    return _pyswice.spkaps_c(targ, et, ref, abcorr, stobs, accobs, starg, lt, dlt)
spkaps_c = _pyswice.spkaps_c

def spkcls_c(handle):
    return _pyswice.spkcls_c(handle)
spkcls_c = _pyswice.spkcls_c

def spkcov_c(spk, idcode, cover):
    return _pyswice.spkcov_c(spk, idcode, cover)
spkcov_c = _pyswice.spkcov_c

def spkcpo_c(target, et, outref, refloc, abcorr, obssta, obsctr, obsref, state, lt):
    return _pyswice.spkcpo_c(target, et, outref, refloc, abcorr, obssta, obsctr, obsref, state, lt)
spkcpo_c = _pyswice.spkcpo_c

def spkcpt_c(trgpos, trgctr, trgref, et, outref, refloc, abcorr, obsrvr, state, lt):
    return _pyswice.spkcpt_c(trgpos, trgctr, trgref, et, outref, refloc, abcorr, obsrvr, state, lt)
spkcpt_c = _pyswice.spkcpt_c

def spkcvo_c(target, et, outref, refloc, abcorr, obssta, obsepc, obsctr, obsref, state, lt):
    return _pyswice.spkcvo_c(target, et, outref, refloc, abcorr, obssta, obsepc, obsctr, obsref, state, lt)
spkcvo_c = _pyswice.spkcvo_c

def spkcvt_c(trgsta, trgepc, trgctr, trgref, et, outref, refloc, abcorr, obsrvr, state, lt):
    return _pyswice.spkcvt_c(trgsta, trgepc, trgctr, trgref, et, outref, refloc, abcorr, obsrvr, state, lt)
spkcvt_c = _pyswice.spkcvt_c

def spkez_c(target, epoch, frame, abcorr, observer, state, lt):
    return _pyswice.spkez_c(target, epoch, frame, abcorr, observer, state, lt)
spkez_c = _pyswice.spkez_c

def spkezp_c(targ, et, ref, abcorr, obs, ptarg, lt):
    return _pyswice.spkezp_c(targ, et, ref, abcorr, obs, ptarg, lt)
spkezp_c = _pyswice.spkezp_c

def spkezr_c(target, epoch, frame, abcorr, observer, state, lt):
    return _pyswice.spkezr_c(target, epoch, frame, abcorr, observer, state, lt)
spkezr_c = _pyswice.spkezr_c

def spkgeo_c(targ, et, ref, obs, state, lt):
    return _pyswice.spkgeo_c(targ, et, ref, obs, state, lt)
spkgeo_c = _pyswice.spkgeo_c

def spkgps_c(targ, et, ref, obs, pos, lt):
    return _pyswice.spkgps_c(targ, et, ref, obs, pos, lt)
spkgps_c = _pyswice.spkgps_c

def spklef_c(filename, handle):
    return _pyswice.spklef_c(filename, handle)
spklef_c = _pyswice.spklef_c

def spkltc_c(targ, et, ref, abcorr, stobs, starg, lt, dlt):
    return _pyswice.spkltc_c(targ, et, ref, abcorr, stobs, starg, lt, dlt)
spkltc_c = _pyswice.spkltc_c

def spkobj_c(spk, ids):
    return _pyswice.spkobj_c(spk, ids)
spkobj_c = _pyswice.spkobj_c

def spkopa_c(file, handle):
    return _pyswice.spkopa_c(file, handle)
spkopa_c = _pyswice.spkopa_c

def spkopn_c(name, ifname, ncomch, handle):
    return _pyswice.spkopn_c(name, ifname, ncomch, handle)
spkopn_c = _pyswice.spkopn_c

def spkpds_c(body, center, frame, type, first, last, descr):
    return _pyswice.spkpds_c(body, center, frame, type, first, last, descr)
spkpds_c = _pyswice.spkpds_c

def spkpos_c(targ, et, ref, abcorr, obs, ptarg, lt):
    return _pyswice.spkpos_c(targ, et, ref, abcorr, obs, ptarg, lt)
spkpos_c = _pyswice.spkpos_c

def spkpvn_c(handle, descr, et, ref, state, center):
    return _pyswice.spkpvn_c(handle, descr, et, ref, state, center)
spkpvn_c = _pyswice.spkpvn_c

def spksfs_c(body, et, idlen, handle, descr, ident, found):
    return _pyswice.spksfs_c(body, et, idlen, handle, descr, ident, found)
spksfs_c = _pyswice.spksfs_c

def spkssb_c(targ, et, ref, starg):
    return _pyswice.spkssb_c(targ, et, ref, starg)
spkssb_c = _pyswice.spkssb_c

def spksub_c(handle, descr, ident, begin, end, newh):
    return _pyswice.spksub_c(handle, descr, ident, begin, end, newh)
spksub_c = _pyswice.spksub_c

def spkuds_c(descr, body, center, frame, type, first, last, begin, end):
    return _pyswice.spkuds_c(descr, body, center, frame, type, first, last, begin, end)
spkuds_c = _pyswice.spkuds_c

def spkuef_c(handle):
    return _pyswice.spkuef_c(handle)
spkuef_c = _pyswice.spkuef_c

def spkw02_c(handle, body, center, frame, first, last, segid, intlen, n, polydg, cdata, btime):
    return _pyswice.spkw02_c(handle, body, center, frame, first, last, segid, intlen, n, polydg, cdata, btime)
spkw02_c = _pyswice.spkw02_c

def spkw03_c(handle, body, center, frame, first, last, segid, intlen, n, polydg, cdata, btime):
    return _pyswice.spkw03_c(handle, body, center, frame, first, last, segid, intlen, n, polydg, cdata, btime)
spkw03_c = _pyswice.spkw03_c

def spkw05_c(handle, body, center, frame, first, last, segid, gm, n, states, epochs):
    return _pyswice.spkw05_c(handle, body, center, frame, first, last, segid, gm, n, states, epochs)
spkw05_c = _pyswice.spkw05_c

def spkw08_c(handle, body, center, frame, first, last, segid, degree, n, states, epoch1, step):
    return _pyswice.spkw08_c(handle, body, center, frame, first, last, segid, degree, n, states, epoch1, step)
spkw08_c = _pyswice.spkw08_c

def spkw09_c(handle, body, center, frame, first, last, segid, degree, n, states, epochs):
    return _pyswice.spkw09_c(handle, body, center, frame, first, last, segid, degree, n, states, epochs)
spkw09_c = _pyswice.spkw09_c

def spkw10_c(handle, body, center, frame, first, last, segid, consts, n, elems, epochs):
    return _pyswice.spkw10_c(handle, body, center, frame, first, last, segid, consts, n, elems, epochs)
spkw10_c = _pyswice.spkw10_c

def spkw12_c(handle, body, center, frame, first, last, segid, degree, n, states, epoch0, step):
    return _pyswice.spkw12_c(handle, body, center, frame, first, last, segid, degree, n, states, epoch0, step)
spkw12_c = _pyswice.spkw12_c

def spkw13_c(handle, body, center, frame, first, last, segid, degree, n, states, epochs):
    return _pyswice.spkw13_c(handle, body, center, frame, first, last, segid, degree, n, states, epochs)
spkw13_c = _pyswice.spkw13_c

def spkw15_c(handle, body, center, frame, first, last, segid, epoch, tp, pa, p, ecc, j2flg, pv, gm, j2, radius):
    return _pyswice.spkw15_c(handle, body, center, frame, first, last, segid, epoch, tp, pa, p, ecc, j2flg, pv, gm, j2, radius)
spkw15_c = _pyswice.spkw15_c

def spkw17_c(handle, body, center, frame, first, last, segid, epoch, eqel, rapol, decpol):
    return _pyswice.spkw17_c(handle, body, center, frame, first, last, segid, epoch, eqel, rapol, decpol)
spkw17_c = _pyswice.spkw17_c

def spkw18_c(handle, subtyp, body, center, frame, first, last, segid, degree, n, packts, epochs):
    return _pyswice.spkw18_c(handle, subtyp, body, center, frame, first, last, segid, degree, n, packts, epochs)
spkw18_c = _pyswice.spkw18_c

def spkw20_c(handle, body, center, frame, first, last, segid, intlen, n, polydg, cdata, dscale, tscale, initjd, initfr):
    return _pyswice.spkw20_c(handle, body, center, frame, first, last, segid, intlen, n, polydg, cdata, dscale, tscale, initjd, initfr)
spkw20_c = _pyswice.spkw20_c

def srfrec_c(body, lon, lat, rectan):
    return _pyswice.srfrec_c(body, lon, lat, rectan)
srfrec_c = _pyswice.srfrec_c

def srfxpt_c(method, target, et, abcorr, obsrvr, dref, dvec, spoint, dist, trgepc, obspos, found):
    return _pyswice.srfxpt_c(method, target, et, abcorr, obsrvr, dref, dvec, spoint, dist, trgepc, obspos, found)
srfxpt_c = _pyswice.srfxpt_c

def ssize_c(size, cell):
    return _pyswice.ssize_c(size, cell)
ssize_c = _pyswice.ssize_c

def stelab_c(pobj, vobs, appobj):
    return _pyswice.stelab_c(pobj, vobs, appobj)
stelab_c = _pyswice.stelab_c

def stpool_c(item, nth, contin, lenout, string, size, found):
    return _pyswice.stpool_c(item, nth, contin, lenout, string, size, found)
stpool_c = _pyswice.stpool_c

def str2et_c(date, et):
    return _pyswice.str2et_c(date, et)
str2et_c = _pyswice.str2et_c

def subpnt_c(method, target, et, fixref, abcorr, obsrvr, spoint, trgepc, srfvec):
    return _pyswice.subpnt_c(method, target, et, fixref, abcorr, obsrvr, spoint, trgepc, srfvec)
subpnt_c = _pyswice.subpnt_c

def subpt_c(method, target, et, abcorr, obsrvr, spoint, alt):
    return _pyswice.subpt_c(method, target, et, abcorr, obsrvr, spoint, alt)
subpt_c = _pyswice.subpt_c

def subslr_c(method, target, et, fixref, abcorr, obsrvr, spoint, trgepc, srfvec):
    return _pyswice.subslr_c(method, target, et, fixref, abcorr, obsrvr, spoint, trgepc, srfvec)
subslr_c = _pyswice.subslr_c

def subsol_c(method, target, et, abcorr, obsrvr, spoint):
    return _pyswice.subsol_c(method, target, et, abcorr, obsrvr, spoint)
subsol_c = _pyswice.subsol_c

def sumad_c(array, n):
    return _pyswice.sumad_c(array, n)
sumad_c = _pyswice.sumad_c

def sumai_c(array, n):
    return _pyswice.sumai_c(array, n)
sumai_c = _pyswice.sumai_c

def surfnm_c(a, b, c, point, normal):
    return _pyswice.surfnm_c(a, b, c, point, normal)
surfnm_c = _pyswice.surfnm_c

def surfpt_c(positn, u, a, b, c, point, found):
    return _pyswice.surfpt_c(positn, u, a, b, c, point, found)
surfpt_c = _pyswice.surfpt_c

def surfpv_c(stvrtx, stdir, a, b, c, stx, found):
    return _pyswice.surfpv_c(stvrtx, stdir, a, b, c, stx, found)
surfpv_c = _pyswice.surfpv_c

def swpool_c(agent, nnames, lenvals, names):
    return _pyswice.swpool_c(agent, nnames, lenvals, names)
swpool_c = _pyswice.swpool_c

def sxform_c(arg1, to, et, xform):
    return _pyswice.sxform_c(arg1, to, et, xform)
sxform_c = _pyswice.sxform_c

def szpool_c(name, n, found):
    return _pyswice.szpool_c(name, n, found)
szpool_c = _pyswice.szpool_c

def timdef_c(action, item, lenout, value):
    return _pyswice.timdef_c(action, item, lenout, value)
timdef_c = _pyswice.timdef_c

def timout_c(et, pictur, lenout, output):
    return _pyswice.timout_c(et, pictur, lenout, output)
timout_c = _pyswice.timout_c

def tipbod_c(ref, body, et, tipm):
    return _pyswice.tipbod_c(ref, body, et, tipm)
tipbod_c = _pyswice.tipbod_c

def tisbod_c(ref, body, et, tsipm):
    return _pyswice.tisbod_c(ref, body, et, tsipm)
tisbod_c = _pyswice.tisbod_c

def tkvrsn_c(item):
    return _pyswice.tkvrsn_c(item)
tkvrsn_c = _pyswice.tkvrsn_c

def tparse_c(string, lenout, sp2000, errmsg):
    return _pyswice.tparse_c(string, lenout, sp2000, errmsg)
tparse_c = _pyswice.tparse_c

def tpictr_c(sample, lenpictur, lenerror, pictur, ok, error):
    return _pyswice.tpictr_c(sample, lenpictur, lenerror, pictur, ok, error)
tpictr_c = _pyswice.tpictr_c

def trace_c(matrix):
    return _pyswice.trace_c(matrix)
trace_c = _pyswice.trace_c

def trcdep_c(depth):
    return _pyswice.trcdep_c(depth)
trcdep_c = _pyswice.trcdep_c

def trcnam_c(index, namelen, name):
    return _pyswice.trcnam_c(index, namelen, name)
trcnam_c = _pyswice.trcnam_c

def trcoff_c():
    return _pyswice.trcoff_c()
trcoff_c = _pyswice.trcoff_c

def tsetyr_c(year):
    return _pyswice.tsetyr_c(year)
tsetyr_c = _pyswice.tsetyr_c

def twopi_c():
    return _pyswice.twopi_c()
twopi_c = _pyswice.twopi_c

def twovec_c(axdef, indexa, plndef, indexp, mout):
    return _pyswice.twovec_c(axdef, indexa, plndef, indexp, mout)
twovec_c = _pyswice.twovec_c

def tyear_c():
    return _pyswice.tyear_c()
tyear_c = _pyswice.tyear_c

def ucase_c(arg1, lenout, out):
    return _pyswice.ucase_c(arg1, lenout, out)
ucase_c = _pyswice.ucase_c

def ucrss_c(v1, v2, vout):
    return _pyswice.ucrss_c(v1, v2, vout)
ucrss_c = _pyswice.ucrss_c

def uddc_c(udfunc, x, dx, isdecr):
    return _pyswice.uddc_c(udfunc, x, dx, isdecr)
uddc_c = _pyswice.uddc_c

def uddf_c(udfunc, x, dx, deriv):
    return _pyswice.uddf_c(udfunc, x, dx, deriv)
uddf_c = _pyswice.uddf_c

def udf_c(x, value):
    return _pyswice.udf_c(x, value)
udf_c = _pyswice.udf_c

def union_c(a, b, c):
    return _pyswice.union_c(a, b, c)
union_c = _pyswice.union_c

def unitim_c(epoch, insys, outsys):
    return _pyswice.unitim_c(epoch, insys, outsys)
unitim_c = _pyswice.unitim_c

def unload_c(file):
    return _pyswice.unload_c(file)
unload_c = _pyswice.unload_c

def unorm_c(v1, vout, vmag):
    return _pyswice.unorm_c(v1, vout, vmag)
unorm_c = _pyswice.unorm_c

def unormg_c(v1, ndim, vout, vmag):
    return _pyswice.unormg_c(v1, ndim, vout, vmag)
unormg_c = _pyswice.unormg_c

def utc2et_c(utcstr, et):
    return _pyswice.utc2et_c(utcstr, et)
utc2et_c = _pyswice.utc2et_c

def vadd_c(v1, v2, vout):
    return _pyswice.vadd_c(v1, v2, vout)
vadd_c = _pyswice.vadd_c

def vaddg_c(v1, v2, ndim, vout):
    return _pyswice.vaddg_c(v1, v2, ndim, vout)
vaddg_c = _pyswice.vaddg_c

def valid_c(size, n, a):
    return _pyswice.valid_c(size, n, a)
valid_c = _pyswice.valid_c

def vcrss_c(v1, v2, vout):
    return _pyswice.vcrss_c(v1, v2, vout)
vcrss_c = _pyswice.vcrss_c

def vdist_c(v1, v2):
    return _pyswice.vdist_c(v1, v2)
vdist_c = _pyswice.vdist_c

def vdistg_c(v1, v2, ndim):
    return _pyswice.vdistg_c(v1, v2, ndim)
vdistg_c = _pyswice.vdistg_c

def vdot_c(v1, v2):
    return _pyswice.vdot_c(v1, v2)
vdot_c = _pyswice.vdot_c

def vdotg_c(v1, v2, ndim):
    return _pyswice.vdotg_c(v1, v2, ndim)
vdotg_c = _pyswice.vdotg_c

def vequ_c(vin, vout):
    return _pyswice.vequ_c(vin, vout)
vequ_c = _pyswice.vequ_c

def vequg_c(vin, ndim, vout):
    return _pyswice.vequg_c(vin, ndim, vout)
vequg_c = _pyswice.vequg_c

def vhat_c(v1, vout):
    return _pyswice.vhat_c(v1, vout)
vhat_c = _pyswice.vhat_c

def vhatg_c(v1, ndim, vout):
    return _pyswice.vhatg_c(v1, ndim, vout)
vhatg_c = _pyswice.vhatg_c

def vlcom_c(a, v1, b, v2, sum):
    return _pyswice.vlcom_c(a, v1, b, v2, sum)
vlcom_c = _pyswice.vlcom_c

def vlcom3_c(a, v1, b, v2, c, v3, sum):
    return _pyswice.vlcom3_c(a, v1, b, v2, c, v3, sum)
vlcom3_c = _pyswice.vlcom3_c

def vlcomg_c(n, a, v1, b, v2, sum):
    return _pyswice.vlcomg_c(n, a, v1, b, v2, sum)
vlcomg_c = _pyswice.vlcomg_c

def vminug_c(vin, ndim, vout):
    return _pyswice.vminug_c(vin, ndim, vout)
vminug_c = _pyswice.vminug_c

def vminus_c(v1, vout):
    return _pyswice.vminus_c(v1, vout)
vminus_c = _pyswice.vminus_c

def vnorm_c(v1):
    return _pyswice.vnorm_c(v1)
vnorm_c = _pyswice.vnorm_c

def vnormg_c(v1, ndim):
    return _pyswice.vnormg_c(v1, ndim)
vnormg_c = _pyswice.vnormg_c

def vpack_c(x, y, z, v):
    return _pyswice.vpack_c(x, y, z, v)
vpack_c = _pyswice.vpack_c

def vperp_c(a, b, p):
    return _pyswice.vperp_c(a, b, p)
vperp_c = _pyswice.vperp_c

def vprjp_c(vin, plane, vout):
    return _pyswice.vprjp_c(vin, plane, vout)
vprjp_c = _pyswice.vprjp_c

def vprjpi_c(vin, projpl, invpl, vout, found):
    return _pyswice.vprjpi_c(vin, projpl, invpl, vout, found)
vprjpi_c = _pyswice.vprjpi_c

def vproj_c(a, b, p):
    return _pyswice.vproj_c(a, b, p)
vproj_c = _pyswice.vproj_c

def vrel_c(v1, v2):
    return _pyswice.vrel_c(v1, v2)
vrel_c = _pyswice.vrel_c

def vrelg_c(v1, v2, ndim):
    return _pyswice.vrelg_c(v1, v2, ndim)
vrelg_c = _pyswice.vrelg_c

def vrotv_c(v, axis, theta, r):
    return _pyswice.vrotv_c(v, axis, theta, r)
vrotv_c = _pyswice.vrotv_c

def vscl_c(s, v1, vout):
    return _pyswice.vscl_c(s, v1, vout)
vscl_c = _pyswice.vscl_c

def vsclg_c(s, v1, ndim, vout):
    return _pyswice.vsclg_c(s, v1, ndim, vout)
vsclg_c = _pyswice.vsclg_c

def vsep_c(v1, v2):
    return _pyswice.vsep_c(v1, v2)
vsep_c = _pyswice.vsep_c

def vsub_c(v1, v2, vout):
    return _pyswice.vsub_c(v1, v2, vout)
vsub_c = _pyswice.vsub_c

def vsubg_c(v1, v2, ndim, vout):
    return _pyswice.vsubg_c(v1, v2, ndim, vout)
vsubg_c = _pyswice.vsubg_c

def vsepg_c(v1, v2, ndim):
    return _pyswice.vsepg_c(v1, v2, ndim)
vsepg_c = _pyswice.vsepg_c

def vtmv_c(v1, matrix, v2):
    return _pyswice.vtmv_c(v1, matrix, v2)
vtmv_c = _pyswice.vtmv_c

def vtmvg_c(v1, matrix, v2, nrow, ncol):
    return _pyswice.vtmvg_c(v1, matrix, v2, nrow, ncol)
vtmvg_c = _pyswice.vtmvg_c

def vupack_c(v, x, y, z):
    return _pyswice.vupack_c(v, x, y, z)
vupack_c = _pyswice.vupack_c

def vzero_c(v):
    return _pyswice.vzero_c(v)
vzero_c = _pyswice.vzero_c

def vzerog_c(v, ndim):
    return _pyswice.vzerog_c(v, ndim)
vzerog_c = _pyswice.vzerog_c

def wncard_c(window):
    return _pyswice.wncard_c(window)
wncard_c = _pyswice.wncard_c

def wncomd_c(left, right, window, result):
    return _pyswice.wncomd_c(left, right, window, result)
wncomd_c = _pyswice.wncomd_c

def wncond_c(left, right, window):
    return _pyswice.wncond_c(left, right, window)
wncond_c = _pyswice.wncond_c

def wndifd_c(a, b, c):
    return _pyswice.wndifd_c(a, b, c)
wndifd_c = _pyswice.wndifd_c

def wnelmd_c(point, window):
    return _pyswice.wnelmd_c(point, window)
wnelmd_c = _pyswice.wnelmd_c

def wnexpd_c(left, right, window):
    return _pyswice.wnexpd_c(left, right, window)
wnexpd_c = _pyswice.wnexpd_c

def wnextd_c(side, window):
    return _pyswice.wnextd_c(side, window)
wnextd_c = _pyswice.wnextd_c

def wnfetd_c(window, n, left, right):
    return _pyswice.wnfetd_c(window, n, left, right)
wnfetd_c = _pyswice.wnfetd_c

def wnfild_c(sml, window):
    return _pyswice.wnfild_c(sml, window)
wnfild_c = _pyswice.wnfild_c

def wnfltd_c(sml, window):
    return _pyswice.wnfltd_c(sml, window)
wnfltd_c = _pyswice.wnfltd_c

def wnincd_c(left, right, window):
    return _pyswice.wnincd_c(left, right, window)
wnincd_c = _pyswice.wnincd_c

def wninsd_c(left, right, window):
    return _pyswice.wninsd_c(left, right, window)
wninsd_c = _pyswice.wninsd_c

def wnintd_c(a, b, c):
    return _pyswice.wnintd_c(a, b, c)
wnintd_c = _pyswice.wnintd_c

def wnreld_c(a, op, b):
    return _pyswice.wnreld_c(a, op, b)
wnreld_c = _pyswice.wnreld_c

def wnsumd_c(window, meas, avg, stddev, shortest, longest):
    return _pyswice.wnsumd_c(window, meas, avg, stddev, shortest, longest)
wnsumd_c = _pyswice.wnsumd_c

def wnunid_c(a, b, c):
    return _pyswice.wnunid_c(a, b, c)
wnunid_c = _pyswice.wnunid_c

def wnvald_c(size, n, window):
    return _pyswice.wnvald_c(size, n, window)
wnvald_c = _pyswice.wnvald_c

def xf2eul_c(xform, axisa, axisb, axisc, eulang, unique):
    return _pyswice.xf2eul_c(xform, axisa, axisb, axisc, eulang, unique)
xf2eul_c = _pyswice.xf2eul_c

def xf2rav_c(xform, rot, av):
    return _pyswice.xf2rav_c(xform, rot, av)
xf2rav_c = _pyswice.xf2rav_c

def xfmsta_c(input_state, input_coord_sys, output_coord_sys, body, output_state):
    return _pyswice.xfmsta_c(input_state, input_coord_sys, output_coord_sys, body, output_state)
xfmsta_c = _pyswice.xfmsta_c

def xpose_c(m1, mout):
    return _pyswice.xpose_c(m1, mout)
xpose_c = _pyswice.xpose_c

def xpose6_c(m1, mout):
    return _pyswice.xpose6_c(m1, mout)
xpose6_c = _pyswice.xpose6_c

def xposeg_c(matrix, nrow, ncol, xposem):
    return _pyswice.xposeg_c(matrix, nrow, ncol, xposem)
xposeg_c = _pyswice.xposeg_c

def zzgetcml_c(argc, argv, init):
    return _pyswice.zzgetcml_c(argc, argv, init)
zzgetcml_c = _pyswice.zzgetcml_c

def zzgfgeth_c():
    return _pyswice.zzgfgeth_c()
zzgfgeth_c = _pyswice.zzgfgeth_c

def zzgfsavh_c(status):
    return _pyswice.zzgfsavh_c(status)
zzgfsavh_c = _pyswice.zzgfsavh_c

def zzsynccl_c(xdir, cell):
    return _pyswice.zzsynccl_c(xdir, cell)
zzsynccl_c = _pyswice.zzsynccl_c
# This file is compatible with both classic and new-style classes.


